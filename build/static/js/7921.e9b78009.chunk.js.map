{"version":3,"file":"static/js/7921.e9b78009.chunk.js","mappings":"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","sources":["views/pages/product/EditProduct.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CImage,\n  CFormSelect,\n  CFormCheck,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CAlert,\n  CCardHeader,\n  CDatePicker,\n  CFormTextarea\n} from '@coreui/react-pro'\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\n\nconst EditProduct = () => {\n  const navigate = useNavigate();\n  const productId = useLocation().state?.productId;\n    const [manuDesc, setManuDesc] = useState(\"\")\n    const [distItemNum, setDistItemNum] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [manuItemNum, setManuItemNum] = useState(\"\")\n    const [productType, setProductType] = useState(\"\")\n    const [caseDimeTitle, setCaseDimeTitle] = useState(\"\")\n    const [caseDimeLength, setCaseDimeLength] = useState(0)\n    const [caseDimeWidth, setCaseDimeWidth] = useState(0)\n    const [caseDimeHeight, setCaseDimeHeight] = useState(0)\n    const [servingSize, setServingSize] = useState(\"\")\n    const [shelfLifeManu, setShelfLifeManu] = useState(\"\")\n    const [storageMethod, setStorageMethod] = useState(\"\")\n    const [tips, setTips] = useState(\"\")\n    const [ingreList, setIngreList] = useState(\"\")\n    const [servicePerCont, setServicePerCont] = useState(\"\")\n    const [serviceSizeQty, setServiceSizeQty] = useState(\"\")\n    const [serviceSizeWt, setServiceSizeWt] = useState(\"\")\n    const [shelfLife, setshelfLife] = useState(\"\")\n    \n    const [manufacturerId, setManufacturerId] = useState(\"\")\n    const [manuMarkStmt, setManuMarkStmt] = useState(\"\")\n    const [caseCount, setCaseCount] = useState(\"\")\n    const [masterPack, setMasterPack] = useState(\"\")\n    const [grossCaseWeight, setGrossCaseWeight] = useState(\"\")\n    const [masterUnitSize, setMasterUnitSize] = useState(\"\")\n    const [gtinNum, setGtinNum] = useState(\"\")\n\n    const [calories, setCalories] = useState(\"\")\n    const [cholestrol, setCholestrol] = useState(\"\")\n    const [totalFat, setTotalFat] = useState(\"\")\n    const [saturatedFat, setSaturatedFat] = useState(\"\")\n    const [transFat, setTransFat] = useState(\"\")\n    const [sodium, setSodium] = useState(\"\")\n    const [totalCarboht, setTotalCarboht] = useState(\"\")\n    const [dietaryFiber, setDietaryFiber] = useState(\"\")\n    const [totalSugar, setTotalSugar] = useState(\"\")\n    const [addedSugar, setAddedSugar] = useState(\"\")\n    const [protein, setProtein] = useState(\"\")\n    const [vitD, setVitD] = useState(\"\")\n    const [calcuim, setCalcuim] = useState(\"\")\n    const [iron, setIron] = useState(\"\")\n    const [potassium, setPotassium] = useState(\"\")\n\n    const [cnLabel, setCnLabel] = useState(\"\")\n    const [isActive, setIsActive] = useState(\"\")\n\n    const [serverImageURLs, setServerImageURLs] = useState([]);\n    const [uploadedImages, setUploadedImages] = useState([]);\n    const [displayImageURLs, setDisplayImageURLs] = useState([]);\n    const [newImagesBase64, setNewImagesBase64] = useState([]);\n    \n    const [formData, setFormData] = useState([{ imageType: '', logo: '', logoFile: null, base64Image: '' }]);\n\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const [clients, setClients] = useState([])\n    const [errors, setErrors] = useState({});\n\n    const handleAddForm = () => {\n      setFormData([...formData, { imageType: '', logo: '', logoFile: null, base64Image: '' }]);\n    };\n  \n    const handleRemoveForm = (index) => {\n      const updatedFormData = [...formData];\n      updatedFormData.splice(index, 1);\n      setFormData(updatedFormData);\n    };\n  \n    const handleInputChange = async (index, event) => {\n      const { name, value, files } = event.target;\n      const updatedFormData = [...formData];\n  \n      if (files) {\n        const file = files[0];\n        updatedFormData[index]['logoFile'] = URL.createObjectURL(file);\n  \n        // Convert the image file to a base64 encoded string\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n          updatedFormData[index]['base64Image'] = reader.result;\n          setFormData(updatedFormData);\n        };\n      } else {\n        updatedFormData[index][name] = value;\n        setFormData(updatedFormData);\n      }\n    };\n\n    useEffect(() => {  \n    axios.get('client/findAll/distributer', {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }}).then(response => setClients(response.data.data))\n    .catch(error => console.error('error fetching clients', error));\n  }, [])\n\n    useEffect(() => {\n      axios.get('product/'+productId, {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }})\n          .then((response) => {\n            if(response.data){\n              \n              let productDetail = response.data.data;\n              setName(productDetail.name);\n              setProductType(productDetail.productType);\n              setManuItemNum (productDetail.manuItemNum);\n              setManuDesc(productDetail.manuDesc);\n              setDistItemNum(productDetail.distItemNum);\n              setManuMarkStmt(productDetail.manuMarkStmt);\n              setManufacturerId(productDetail.manufacturerId);\n              setGtinNum(productDetail.gtinNum);\n              setCaseCount(productDetail.caseCount);\n              setMasterPack(productDetail.masterPack);\n              setGrossCaseWeight(productDetail.grossCaseWeight);\n              setMasterUnitSize(productDetail.masterUnitSize);\n              setCaseDimeTitle(productDetail.caseDimeTitle);\n              setCaseDimeLength(productDetail.caseDimeLength);\n              setCaseDimeWidth(productDetail.caseDimeWidth);\n              setCaseDimeHeight(productDetail.caseDimeHeight);\n              setServingSize(productDetail.servingSize);\n              setShelfLifeManu(productDetail.shelfLifeManu);\n              setStorageMethod(productDetail.storageMethod);\n              setshelfLife(productDetail.shelfLife);\n              setIngreList(productDetail.ingreList);\n              setTips(productDetail.tips);\n              setServicePerCont(productDetail.servicePerCont);\n              setServiceSizeQty(productDetail.serviceSizeQty);\n              setServiceSizeWt(productDetail.serviceSizeWt);\n              setCalories(productDetail.calories);\n              setCholestrol(productDetail.cholestrol);\n              setSodium(productDetail.sodium);\n              setTotalFat(productDetail.totalFat);\n              setSaturatedFat(productDetail.saturatedFat);\n              setTransFat(productDetail.transFat);\n              setTotalSugar(productDetail.totalSugar);\n              setAddedSugar(productDetail.addedSugar);\n              setTotalCarboht(productDetail.totalCarboht);\n              setDietaryFiber(productDetail.dietaryFiber);\n              setProtein(productDetail.protein);\n              setVitD(productDetail.vitD);\n              setCalcuim(productDetail.calcuim);\n              setIron(productDetail.iron);\n              setPotassium(productDetail.potassium);\n              setCnLabel(productDetail.cnLabel);\n              setIsActive(productDetail.isActive);\n              let images = productDetail.images;\n              let imageData = []\n              images.map(img => {\n                let imgDetail = { imageType: img.imageType, logo: img.imagePath, logoFile: process.env.REACT_APP_API_URL+img.imagePath, base64Image: '', id: img.id }\n                imageData.push(imgDetail);\n              });\n              setFormData(imageData); \n            }\n          })\n  }, [])\n\n  const validateForm = () => {\n    const errors = {};\n    if (!manuItemNum.trim()) {\n      errors.manuItemNum = 'First Name is required';\n    }\n    if (!manuDesc.trim()) {\n      errors.manuDesc = 'Last Name is required';\n    }\n    if (!name.trim()) {\n      errors.name = 'Email is required';\n    }\n    if (!manuMarkStmt.trim()) {\n      errors.manuMarkStmt = 'username is required';\n    }\n    if (!distItemNum.trim()) {\n      errors.distItemNum = 'Password is required';\n    }\n    if (!manufacturerId.trim()) {\n      errors.manufacturerId = 'Work phone is required';\n    }\n    if (!productType.trim()) {\n      errors.productType = 'Work address is required';\n    }\n    if (!caseCount.trim()) {\n      errors.caseCount = 'Work address is required';\n    }\n    if (!masterPack.trim()) {\n      errors.masterPack = 'State is required';\n    }\n    if (!grossCaseWeight.trim()) {\n      errors.grossCaseWeight = 'City is required';\n    }\n    if (!masterUnitSize.trim()) {\n      errors.masterUnitSize = 'Zip code is required';\n    }\n    if (!caseDimeTitle.trim()) {\n      errors.caseDimeTitle = 'Zip code is required';\n    }\n    if (!servingSize.trim()) {\n      errors.servingSize = 'Zip code is required';\n    }\n    if (!shelfLife.trim()) {\n      errors.shelfLife = 'Zip code is required';\n    }\n    if (!shelfLifeManu.trim()) {\n      errors.shelfLifeManu = 'Zip code is required';\n    }\n    if (!storageMethod.trim()) {\n      errors.storageMethod = 'Zip code is required';\n    }\n    if (!ingreList.trim()) {\n      errors.ingreList = 'Zip code is required';\n    }\n    if (!tips.trim()) {\n      errors.tips = 'Zip code is required';\n    }\n    if (!servicePerCont.trim()) {\n      errors.servicePerCont = 'Zip code is required';\n    }\n    if (!serviceSizeWt.trim()) {\n      errors.serviceSizeWt = 'Zip code is required';\n    }\n    if (!serviceSizeQty.trim()) {\n      errors.serviceSizeQty = 'Zip code is required';\n    }\n    if (!calories.trim()) {\n      errors.calories = 'Zip code is required';\n    }\n    if (!cholestrol.trim()) {\n      errors.cholestrol = 'Zip code is required';\n    }\n    if (!sodium.trim()) {\n      errors.sodium = 'Zip code is required';\n    }\n    if (!totalFat.trim()) {\n      errors.totalFat = 'Zip code is required';\n    }\n    if (!saturatedFat.trim()) {\n      errors.saturatedFat = 'Zip code is required';\n    }\n    if (!transFat.trim()) {\n      errors.transFat = 'Zip code is required';\n    }\n    if (!totalCarboht.trim()) {\n      errors.totalCarboht = 'Zip code is required';\n    }\n    if (!dietaryFiber.trim()) {\n      errors.dietaryFiber = 'Zip code is required';\n    }\n    if (!totalSugar.trim()) {\n      errors.totalSugar = 'Zip code is required';\n    }\n    if (!addedSugar.trim()) {\n      errors.addedSugar = 'Zip code is required';\n    }\n    if (!protein.trim()) {\n      errors.protein = 'Zip code is required';\n    }\n    if (!vitD.trim()) {\n      errors.vitD = 'Zip code is required';\n    }\n    if (!calcuim.trim()) {\n      errors.calcuim = 'Zip code is required';\n    }\n    if (!iron.trim()) {\n      errors.iron = 'Zip code is required';\n    }\n    if (!potassium.trim()) {\n      errors.potassium = 'Zip code is required';\n    }\n    \n    console.log(errors);\n    // Add validations for other fields\n\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n \n \n    const editProductAction = async (e) => {\n        e.preventDefault();\n        setIsSubmitting(true)\n        const productImages = formData.map(data => ({\n          imageType: data.imageType,\n          image: data.base64Image || data.logo,\n          id: data.id || null\n        }));\n        let payload = {\n          manuDesc: manuDesc,\n            name: name,\n            distItemNum:distItemNum,\n            manuItemNum:manuItemNum,\n            manuMarkStmt:manuMarkStmt,\n            manufacturerId: manufacturerId,\n            productType: productType,\n            caseDimeTitle: caseDimeTitle,\n            caseDimeLength: caseDimeLength,\n            caseDimeWidth: caseDimeWidth,\n            caseDimeHeight: caseDimeHeight,\n            servingSize: servingSize,\n            shelfLifeManu: shelfLifeManu,\n            storageMethod: storageMethod,\n            tips: tips,\n            ingreList: ingreList,\n            servicePerCont: servicePerCont,\n            serviceSizeQty: serviceSizeQty,\n            serviceSizeWt: serviceSizeWt,\n            shelfLife: shelfLife,\n            masterPack: masterPack,\n            grossCaseWeight: grossCaseWeight,\n            masterUnitSize: masterUnitSize,\n            gtinNum: gtinNum,\n            caseCount: caseCount,\n            calories: calories,\n            cholestrol: cholestrol,\n            totalFat: totalFat,\n            saturatedFat: saturatedFat,\n            transFat: transFat,\n            sodium: sodium,\n            totalCarboht: totalCarboht,\n            dietaryFiber: dietaryFiber,\n            totalSugar: totalSugar,\n            addedSugar: addedSugar,\n            protein: protein,\n            vitD: vitD,\n            calcuim: calcuim,\n            iron: iron,\n            potassium: potassium,\n            cnLabel: cnLabel,\n            isActive: isActive,\n            images: productImages\n        }\n        axios.patch('/product/update/'+productId, payload, {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }} )\n        .then((r) => {\n          toast.success(r.data.message);     \n          setIsSubmitting(false)\n\n        })\n        .catch((e) => {\n            setIsSubmitting(false)\n            console.log(e);\n        });\n    }\n\n  return (\n    <div className=\"bg-body-tertiary min-vh-75 d-flex flex-row align-items-center\">\n      <CContainer>\n              <CForm className=\"row g-3\" onSubmit={(e)=>editProductAction(e)}>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={12}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>MFG Product Information</CCardHeader>\n              <CCardBody className=\"p-4\">\n                <CRow className='mb-4'>\n                <CCol md={6}>\n                  <CFormSelect id=\"manufacturerId\" label=\"Manufacturer\" name='manufacturerId' onChange={(e)=>{setManufacturerId(e.target.value)}} value={manufacturerId} >\n                    <option>...Choose</option>\n                    {clients.map((e, key) => {\n                        return <option key={key} value={e.id}>{e.companyName}</option>;\n                    })}\n                  </CFormSelect>\n                </CCol>\n                  <CCol md={6}>\n                    <CFormInput type=\"number\" id=\"manuItemNum\" label=\"Manufacturer Item Number\" onChange={(e)=>{setManuItemNum(e.target.value)}} value={manuItemNum} name='manuItemNum' />\n                  </CCol>\n                </CRow>\n\n                <CRow className='mb-4'>\n                  <CCol md={6}>\n                    <CFormInput type=\"text\" id=\"distItemNum\" label=\"Distributor Item Number\" onChange={(e)=>{setDistItemNum(e.target.value)}} value={distItemNum} name='distItemNum' />\n                  </CCol>\n                    <CCol md={6}>\n                      <CFormInput type=\"number\" id=\"gtinNum\" label=\"GTIN Number\" onChange={(e)=>{setGtinNum(e.target.value)}} value={gtinNum} name='gtinNum' />\n                    </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                <CCol md={12}>\n                  <CFormInput type=\"text\" id=\"name\" label=\"Name\" onChange={(e)=>{setName(e.target.value)}} value={name} name='name' />\n                </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"manuDesc\" label=\"Product Description\" onChange={(e)=>{setManuDesc(e.target.value)}} value={manuDesc} name='manuDesc'></CFormTextarea>\n                  </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"manuMarkStmt\" label=\"Product Marketing Statement\" onChange={(e)=>{setManuMarkStmt(e.target.value)}} value={manuMarkStmt} name='manuMarkStmt'></CFormTextarea>\n                  </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                <CCol md={6}>\n                  <CFormSelect id=\"productType\" label=\"Product Type\" name='productType' onChange={(e)=>{setProductType(e.target.value)}} value={productType} >\n                    <option>Choose...</option>\n                    <option value='Paper' >Paper</option>\n                    <option value='Disposables' >Disposables</option>\n                    <option value='Beverages' >Beverages</option>\n                    <option value='Food-Frozen' >Food-Frozen</option>\n                    <option value='Food-Fresh' >Food-Fresh</option>\n                    <option value='DryFoods' >Dry Foods</option>\n                    <option value='SmallWares' >Small Wares</option>\n                  </CFormSelect>\n                </CCol>\n                </CRow>\n                </CCardBody>\n                </CCard>\n                </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md={9} lg={7} xl={12}>                    \n                    <CCard className=\"mb-4\">\n                      <CCardHeader>Product Images</CCardHeader>\n                      <CCardBody className=\"p-4\">\n                      {formData.map((data, index) => (\n                        <CRow key={index} className=\"mb-3\">\n                          <CCol>\n                            <CFormSelect\n                              id={`imageType${index}`}\n                              name=\"imageType\"\n                              value={data.imageType}\n                              onChange={(e) => handleInputChange(index, e)}\n                            >\n                              <option value=\"\">...Choose</option>\n                              <option value=\"close\">Closed Case</option>\n                              <option value=\"open\">Open Case</option>\n                              <option value=\"innerPack\">Inner Pack</option>\n                              <option value=\"raw\">Raw/Uncooked</option>\n                              <option value=\"plated\">Plated</option>\n                              <option value=\"styled\">Styled</option>\n                            </CFormSelect>\n                          </CCol>\n                          <CCol>\n                            <CFormInput\n                              type=\"file\"\n                              id={`productImage${index}`}\n                              name=\"logo\"\n                              onChange={(e) => handleInputChange(index, e)}\n                            />\n                            {data.logoFile && <CImage rounded thumbnail width={200} height={200} src={data.logoFile} />}\n                          </CCol>\n                          <CCol>\n                            <CButton color=\"danger\" onClick={() => handleRemoveForm(index)}>\n                              Remove\n                            </CButton>\n                          </CCol>\n                        </CRow>\n                      ))}\n                      <CButton type=\"button\" onClick={handleAddForm} className='btn btn-primary'>\n                        Add Image\n                      </CButton>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md={9} lg={7} xl={12}>\n                    \n                    <CCard className=\"mb-4\">\n                    <CCardHeader>Product Attributes</CCardHeader>\n                  <CCardBody className=\"p-4\">\n                    \n                  <CRow className='mb-4'>\n                    <CCol>\n                    <CFormInput type='number' locale=\"en-US\" id=\"caseCount\" label=\"Case Count\" onChange={(e)=>{setCaseCount(e.target.value)}} value={caseCount} name='caseCount' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"masterPack\" label=\"Master Pack\" onChange={(e)=>{setMasterPack(e.target.value)}} value={masterPack} name='masterPack' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"grossCaseWeight\" label=\"Gross Case Weight\" onChange={(e)=>{setGrossCaseWeight(e.target.value)}} value={grossCaseWeight} name='grossCaseWeight' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"masterUnitSize\" label=\"Master Unit Size\" onChange={(e)=>{setMasterUnitSize(e.target.value)}} value={masterUnitSize} name='masterUnitSize' />\n                    </CCol>\n                  </CRow>\n                  <CRow className='mb-4'>\n                      <CCol>\n                        <CFormInput type='text' id=\"caseDimeTitle\" name=\"caseDimeTitle\" label=\"Case Dimensions\" placeholder=\"title\" onChange={(e)=>{setCaseDimeTitle(e.target.value)}} value={caseDimeTitle}  invalid={!!errors.caseDimeTitle}/>\n                      </CCol>\n                      <CCol>\n                      <CFormInput type=\"number\" id=\"caseDimeLength\" label=\"Length\" onChange={(e)=>{setCaseDimeLength(e.target.value)}} value={caseDimeLength} name='masterUnitSize' invalid={!!errors.caseDimeLength} />\n                      </CCol>\n                      <CCol>\n                      <CFormInput type=\"number\" id=\"caseDimeWidth\" label=\"Width\" onChange={(e)=>{setCaseDimeWidth(e.target.value)}} value={caseDimeWidth} name='masterUnitSize' invalid={!!errors.caseDimeWidth} />\n                      </CCol>\n                      <CCol>\n                      <CFormInput type=\"number\" id=\"caseDimeHeight\" label=\"Height\" onChange={(e)=>{setCaseDimeHeight(e.target.value)}} value={caseDimeHeight} name='masterUnitSize' invalid={!!errors.caseDimeHeight} />\n                      </CCol>\n                    </CRow>\n                    <CRow className='mb-4'>\n                    <CCol>\n                      <CFormInput type='text' id=\"shelfLifeManu\" label=\"Shelf Life from Manufacturer\" name=\"shelfLifeManu\" onChange={(e)=>{setShelfLifeManu(e.target.value)}} value={shelfLifeManu} />\n                    </CCol>\n                    <CCol>\n                      <CFormSelect id=\"storageMethod\" label=\"Storage Method\" name='storageMethod' onChange={(e)=>{setStorageMethod(e.target.value)}} value={storageMethod} >\n                        <option>Choose...</option>\n                        <option value='Dry' >Dry</option>\n                        <option value='Refrigerated' >Refrigerated</option>\n                        <option value='Frozen' >Frozen</option>\n                      </CFormSelect>\n                    </CCol>\n                    <CCol>\n                      <CFormSelect id=\"shelfLife\" label=\"Shelf Life\" name='shelfLife' onChange={(e)=>{setshelfLife(e.target.value)}} value={shelfLife} >\n                        <option>Choose...</option>\n                        <option value='UseByDate' >Use By Date</option>\n                        <option value='days365' >365 days</option>\n                        <option value='days365Plus' >365 days plus</option>\n                      </CFormSelect>\n                    </CCol>\n                    </CRow>\n                    <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"ingreList\" label=\"List of all Ingredients\" onChange={(e)=>{setIngreList(e.target.value)}} value={ingreList} name='ingreList'></CFormTextarea>\n                  </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"tips\" label=\"Tips & Handling\" onChange={(e)=>{setTips(e.target.value)}} value={tips} name='tips'></CFormTextarea>\n                  </CCol>\n                </CRow>\n                  </CCardBody>\n                </CCard>\n                  </CCol>\n            </CRow>\n            <CRow>\n              <CCard>\n                <CCardHeader>Nutritional Facts</CCardHeader>\n                <CCardBody className=\"p-4\">\n                <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"calories\" label=\"Calories\" onChange={(e)=>{setCalories(e.target.value)}} value={calories} name='calories' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"cholestrol\" label=\"Cholesterol (mg)\" onChange={(e)=>{setCholestrol(e.target.value)}} value={cholestrol} name='cholestrol' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"sodium\" label=\"Sodium (mg)\" onChange={(e)=>{setSodium(e.target.value)}} value={sodium} name='sodium' />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"totalFat\" label=\"Total Fat (g)\" onChange={(e)=>{setTotalFat(e.target.value)}} value={totalFat} name='totalFat' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"saturatedFat\" label=\"Saturated Fat (g)\" onChange={(e)=>{setSaturatedFat(e.target.value)}} value={saturatedFat} name='saturatedFat' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"transFat\" label=\"Trans Fat (g)\" onChange={(e)=>{setTransFat(e.target.value)}} value={transFat} name='transFat' />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"totalCarboht\" label=\"Total Carbohydrate (g)\" onChange={(e)=>{setTotalCarboht(e.target.value)}} value={totalCarboht} name='totalCarboht' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"totalSugar\" label=\"Total Sugars (g)\" onChange={(e)=>{setTotalSugar(e.target.value)}} value={totalSugar} name='totalSugar' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"addedSugar\" label=\"Added Sugars (g)\" onChange={(e)=>{setAddedSugar(e.target.value)}} value={addedSugar} name='addedSugar' />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"protein\" label=\"Protein (g)\" onChange={(e)=>{setProtein(e.target.value)}} value={protein} name='protein' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"dietaryFiber\" label=\"Dietary Fiber (g)\" onChange={(e)=>{setDietaryFiber(e.target.value)}} value={dietaryFiber} name='dietaryFiber' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"vitD\" label=\" Vitamin D (mcg)\" onChange={(e)=>{setVitD(e.target.value)}} value={vitD} name='vitD' />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"calcuim\" label=\"Calcium (mg)\" onChange={(e)=>{setCalcuim(e.target.value)}} value={calcuim} name='calcuim' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"iron\" label=\"Iron (mg)\" onChange={(e)=>{setIron(e.target.value)}} value={iron} name='iron' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"potassium\" label=\"Potassium (mg)\" onChange={(e)=>{setPotassium(e.target.value)}} value={potassium} name='potassium' />\n                    </CCol>\n                  </CRow>\n                <CRow>\n                    <CCol>\n                      <CFormInput type='number' id=\"servingSize\" label=\"Serving Size\" name=\"servingSize\"  onChange={(e)=>{setServingSize(e.target.value)}} value={servingSize} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"servicePerCont\" label=\"Servings per Container\" onChange={(e)=>{setServicePerCont(e.target.value)}} value={servicePerCont} name='servicePerCont' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"serviceSizeQty\" label=\"Serving Size Qty\" onChange={(e)=>{setServiceSizeQty(e.target.value)}} value={serviceSizeQty} name='serviceSizeQty' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"serviceSizeWt\" label=\"Serving Size Weight (g)\" onChange={(e)=>{setServiceSizeWt(e.target.value)}} value={serviceSizeWt} name='serviceSizeWt' />\n                    </CCol>\n                  </CRow>\n                    <CRow className='mb-4'>\n                      <CCol>\n                        <CFormSelect id=\"cnLabel\" label=\"C N Label\" name='cnLabel' onChange={(e)=>{setCnLabel(e.target.value)}} value={cnLabel} >\n                          <option value='Yes' >Yes</option>\n                          <option value='No' >No</option>\n                        </CFormSelect>\n                      </CCol>\n                    </CRow>\n              </CCardBody>\n              </CCard>\n              </CRow>\n              <CRow>\n                <CCard className=\"mb-4\">\n                  <CCardHeader>Visibility</CCardHeader>\n                  <CCardBody className=\"p-4\">\n                    <CRow className='mb-4'>\n                      <CCol>\n                        <CFormSelect id=\"isActive\" label=\"Published Product\" name='isActive' onChange={(e)=>{setIsActive(e.target.value)}} value={isActive} >\n                          <option value='true' >Published</option>\n                          <option value='false' >Unpublished</option>\n                        </CFormSelect>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n                </CCard>\n              </CRow>\n              <CRow className='p-4'>\n              <CCol xs={12}>\n                  <CButton color=\"primary\" type=\"submit\" disabled={isSubmitting} className='float-end'>Update Product</CButton>\n                </CCol>\n              </CRow>\n              </CForm>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default EditProduct\n"],"names":["EditProduct","_useLocation$state","useNavigate","productId","useLocation","state","manuDesc","setManuDesc","useState","distItemNum","setDistItemNum","name","setName","manuItemNum","setManuItemNum","productType","setProductType","caseDimeTitle","setCaseDimeTitle","caseDimeLength","setCaseDimeLength","caseDimeWidth","setCaseDimeWidth","caseDimeHeight","setCaseDimeHeight","servingSize","setServingSize","shelfLifeManu","setShelfLifeManu","storageMethod","setStorageMethod","tips","setTips","ingreList","setIngreList","servicePerCont","setServicePerCont","serviceSizeQty","setServiceSizeQty","serviceSizeWt","setServiceSizeWt","shelfLife","setshelfLife","manufacturerId","setManufacturerId","manuMarkStmt","setManuMarkStmt","caseCount","setCaseCount","masterPack","setMasterPack","grossCaseWeight","setGrossCaseWeight","masterUnitSize","setMasterUnitSize","gtinNum","setGtinNum","calories","setCalories","cholestrol","setCholestrol","totalFat","setTotalFat","saturatedFat","setSaturatedFat","transFat","setTransFat","sodium","setSodium","totalCarboht","setTotalCarboht","dietaryFiber","setDietaryFiber","totalSugar","setTotalSugar","addedSugar","setAddedSugar","protein","setProtein","vitD","setVitD","calcuim","setCalcuim","iron","setIron","potassium","setPotassium","cnLabel","setCnLabel","isActive","setIsActive","serverImageURLs","setServerImageURLs","uploadedImages","setUploadedImages","displayImageURLs","setDisplayImageURLs","newImagesBase64","setNewImagesBase64","formData","setFormData","imageType","logo","logoFile","base64Image","isSubmitting","setIsSubmitting","clients","setClients","errors","setErrors","handleInputChange","async","index","event","value","files","target","updatedFormData","file","URL","createObjectURL","reader","FileReader","readAsDataURL","onloadend","result","useEffect","axios","get","headers","Authorization","concat","localStorage","getItem","then","response","data","catch","error","console","productDetail","images","imageData","map","img","imgDetail","imagePath","process","id","push","_jsx","className","children","CContainer","_jsxs","CForm","onSubmit","e","preventDefault","productImages","image","payload","patch","r","toast","success","message","log","editProductAction","CRow","CCol","md","lg","xl","CCard","CCardHeader","CCardBody","CFormSelect","label","onChange","key","companyName","CFormInput","type","CFormTextarea","CImage","rounded","thumbnail","width","height","src","CButton","color","onClick","splice","handleRemoveForm","handleAddForm","locale","placeholder","invalid","xs","disabled"],"sourceRoot":""}