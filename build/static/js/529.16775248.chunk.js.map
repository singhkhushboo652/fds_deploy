{"version":3,"file":"static/js/529.16775248.chunk.js","mappings":"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","sources":["views/plugins/charts/Charts.js","../node_modules/@coreui/react-pro/src/components/card/CCardHeader.tsx"],"sourcesContent":["import React from 'react'\nimport { CCard, CCardBody, CCol, CCardHeader, CRow } from '@coreui/react-pro'\nimport {\n  CChartBar,\n  CChartDoughnut,\n  CChartLine,\n  CChartPie,\n  CChartPolarArea,\n  CChartRadar,\n} from '@coreui/react-chartjs'\n\nconst Charts = () => {\n  const random = () => Math.round(Math.random() * 100)\n\n  return (\n    <CRow>\n      <CCol md={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>Bar Chart</CCardHeader>\n          <CCardBody>\n            <CChartBar\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'GitHub Commits',\n                    backgroundColor: '#f87979',\n                    data: [40, 20, 12, 39, 10, 40, 39, 80, 40],\n                  },\n                ],\n              }}\n              labels=\"months\"\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol md={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>Line Chart</CCardHeader>\n          <CCardBody>\n            <CChartLine\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(220, 220, 220, 0.2)',\n                    borderColor: 'rgba(220, 220, 220, 1)',\n                    pointBackgroundColor: 'rgba(220, 220, 220, 1)',\n                    pointBorderColor: '#fff',\n                    data: [random(), random(), random(), random(), random(), random(), random()],\n                  },\n                  {\n                    label: 'My Second dataset',\n                    backgroundColor: 'rgba(151, 187, 205, 0.2)',\n                    borderColor: 'rgba(151, 187, 205, 1)',\n                    pointBackgroundColor: 'rgba(151, 187, 205, 1)',\n                    pointBorderColor: '#fff',\n                    data: [random(), random(), random(), random(), random(), random(), random()],\n                  },\n                ],\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol md={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>Doughnut Chart</CCardHeader>\n          <CCardBody>\n            <CChartDoughnut\n              data={{\n                labels: ['VueJs', 'EmberJs', 'ReactJs', 'AngularJs'],\n                datasets: [\n                  {\n                    backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16'],\n                    data: [40, 20, 80, 10],\n                  },\n                ],\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol md={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>Pie Chart</CCardHeader>\n          <CCardBody>\n            <CChartPie\n              data={{\n                labels: ['Red', 'Green', 'Yellow'],\n                datasets: [\n                  {\n                    data: [300, 50, 100],\n                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                  },\n                ],\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol md={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>Polar Area Chart</CCardHeader>\n          <CCardBody>\n            <CChartPolarArea\n              data={{\n                labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue'],\n                datasets: [\n                  {\n                    data: [11, 16, 7, 3, 14],\n                    backgroundColor: ['#FF6384', '#4BC0C0', '#FFCE56', '#E7E9ED', '#36A2EB'],\n                  },\n                ],\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol md={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>Radar Chart</CCardHeader>\n          <CCardBody>\n            <CChartRadar\n              data={{\n                labels: [\n                  'Eating',\n                  'Drinking',\n                  'Sleeping',\n                  'Designing',\n                  'Coding',\n                  'Cycling',\n                  'Running',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(220, 220, 220, 0.2)',\n                    borderColor: 'rgba(220, 220, 220, 1)',\n                    pointBackgroundColor: 'rgba(220, 220, 220, 1)',\n                    pointBorderColor: '#fff',\n                    pointHighlightFill: '#fff',\n                    pointHighlightStroke: 'rgba(220, 220, 220, 1)',\n                    data: [65, 59, 90, 81, 56, 55, 40],\n                  },\n                  {\n                    label: 'My Second dataset',\n                    backgroundColor: 'rgba(151, 187, 205, 0.2)',\n                    borderColor: 'rgba(151, 187, 205, 1)',\n                    pointBackgroundColor: 'rgba(151, 187, 205, 1)',\n                    pointBorderColor: '#fff',\n                    pointHighlightFill: '#fff',\n                    pointHighlightStroke: 'rgba(151, 187, 205, 1)',\n                    data: [28, 48, 40, 19, 96, 27, 100],\n                  },\n                ],\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Charts\n","import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CCardHeaderProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardHeader: PolymorphicRefForwardingComponent<'div', CCardHeaderProps> = forwardRef<\n  HTMLDivElement,\n  CCardHeaderProps\n>(({ children, as: Component = 'div', className, ...rest }, ref) => {\n  return (\n    <Component className={classNames('card-header', className)} {...rest} ref={ref}>\n      {children}\n    </Component>\n  )\n})\n\nCCardHeader.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardHeader.displayName = 'CCardHeader'\n"],"names":["Charts","random","Math","round","_jsxs","CRow","children","_jsx","CCol","md","CCard","className","CCardHeader","CCardBody","CChartBar","data","labels","datasets","label","backgroundColor","CChartLine","borderColor","pointBackgroundColor","pointBorderColor","CChartDoughnut","CChartPie","hoverBackgroundColor","CChartPolarArea","CChartRadar","pointHighlightFill","pointHighlightStroke","forwardRef","_a","ref","_b","as","Component","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName"],"sourceRoot":""}