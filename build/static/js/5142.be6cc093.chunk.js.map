{"version":3,"file":"static/js/5142.be6cc093.chunk.js","mappings":"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","sources":["views/pages/product/AddProduct.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CImage,\n  CFormSelect,\n  CFormCheck,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CAlert,\n  CCardHeader,\n  CDatePicker,\n  CFormTextarea\n} from '@coreui/react-pro'\nimport axios from 'axios'\nimport CIcon from '@coreui/icons-react'\nimport { toast } from 'react-toastify'\n\nconst AddProduct = () => {\n    const navigate = useNavigate();\n    const [manuDesc, setManuDesc] = useState(\"\")\n    const [distItemNum, setDistItemNum] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [manuItemNum, setManuItemNum] = useState(\"\")\n    const [productType, setProductType] = useState(\"\")\n    const [caseDimeTitle, setCaseDimeTitle] = useState(\"\")\n    const [caseDimeLength, setCaseDimeLength] = useState(0)\n    const [caseDimeWidth, setCaseDimeWidth] = useState(0)\n    const [caseDimeHeight, setCaseDimeHeight] = useState(0)\n    const [servingSize, setServingSize] = useState(\"\")\n    const [shelfLifeManu, setShelfLifeManu] = useState(\"\")\n    const [storageMethod, setStorageMethod] = useState(\"\")\n    const [tips, setTips] = useState(\"\")\n    const [ingreList, setIngreList] = useState(\"\")\n    const [servicePerCont, setServicePerCont] = useState(\"\")\n    const [serviceSizeQty, setServiceSizeQty] = useState(\"\")\n    const [serviceSizeWt, setServiceSizeWt] = useState(\"\")\n    const [shelfLife, setshelfLife] = useState(\"\")\n    \n    const [manufacturerId, setManufacturerId] = useState(\"\")\n    const [manuMarkStmt, setManuMarkStmt] = useState(\"\")\n    const [caseCount, setCaseCount] = useState(\"\")\n    const [masterPack, setMasterPack] = useState(\"\")\n    const [grossCaseWeight, setGrossCaseWeight] = useState(\"\")\n    const [masterUnitSize, setMasterUnitSize] = useState(\"\")\n    const [gtinNum, setGtinNum] = useState(\"\")\n\n    const [calories, setCalories] = useState(\"\")\n    const [cholestrol, setCholestrol] = useState(\"\")\n    const [totalFat, setTotalFat] = useState(\"\")\n    const [saturatedFat, setSaturatedFat] = useState(\"\")\n    const [transFat, setTransFat] = useState(\"\")\n    const [sodium, setSodium] = useState(\"\")\n    const [totalCarboht, setTotalCarboht] = useState(\"\")\n    const [dietaryFiber, setDietaryFiber] = useState(\"\")\n    const [totalSugar, setTotalSugar] = useState(\"\")\n    const [addedSugar, setAddedSugar] = useState(\"\")\n    const [protein, setProtein] = useState(\"\")\n    const [vitD, setVitD] = useState(\"\")\n    const [calcuim, setCalcuim] = useState(\"\")\n    const [iron, setIron] = useState(\"\")\n    const [potassium, setPotassium] = useState(\"\")\n\n    const [cnLabel, setCnLabel] = useState(\"Yes\")\n    const [isActive, setIsActive] = useState(1)\n\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [formData, setFormData] = useState([{ imageType: '', logo: '', logoFile: null, base64Image: '' }]);\n\n    const [clients, setClients] = useState([])\n    const [errors, setErrors] = useState({});\n\n    const handleAddForm = () => {\n      setFormData([...formData, { imageType: '', logo: '', logoFile: null, base64Image: '' }]);\n    };\n  \n    const handleRemoveForm = (index) => {\n      const updatedFormData = [...formData];\n      updatedFormData.splice(index, 1);\n      setFormData(updatedFormData);\n    };\n  \n    const handleInputChange = async (index, event) => {\n      const { name, value, files } = event.target;\n      const updatedFormData = [...formData];\n  \n      if (files) {\n        const file = files[0];\n        updatedFormData[index]['logoFile'] = URL.createObjectURL(file);\n  \n        // Convert the image file to a base64 encoded string\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n          updatedFormData[index]['base64Image'] = reader.result;\n          setFormData(updatedFormData);\n        };\n      } else {\n        updatedFormData[index][name] = value;\n        setFormData(updatedFormData);\n      }\n    };\n\n  useEffect(() => {  \n    axios.get('client/findAll/Manufacturer', {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }}).then(response => setClients(response.data.data))\n    .catch(error => console.error('error fetching clients', error));\n  }, [])\n\n  const validateForm = () => {\n    const errors = {};\n    if (!manuItemNum.trim()) {\n      errors.manuItemNum = 'First Name is required';\n    }\n    if (!manuDesc.trim()) {\n      errors.manuDesc = 'Last Name is required';\n    }\n    if (!name.trim()) {\n      errors.name = 'Email is required';\n    }\n    if (!manuMarkStmt.trim()) {\n      errors.manuMarkStmt = 'username is required';\n    }\n    if (!distItemNum.trim()) {\n      errors.distItemNum = 'Password is required';\n    }\n    if (!manufacturerId.trim()) {\n      errors.manufacturerId = 'Work phone is required';\n    }\n    if (!productType.trim()) {\n      errors.productType = 'Work address is required';\n    }\n    if (!caseCount.trim()) {\n      errors.caseCount = 'Work address is required';\n    }\n    if (!masterPack.trim()) {\n      errors.masterPack = 'State is required';\n    }\n    if (!grossCaseWeight.trim()) {\n      errors.grossCaseWeight = 'City is required';\n    }\n    if (!masterUnitSize.trim()) {\n      errors.masterUnitSize = 'Zip code is required';\n    }\n    if (!caseDimeTitle.trim()) {\n      errors.caseDimeTitle = 'Zip code is required';\n    }\n    if (!servingSize.trim()) {\n      errors.servingSize = 'Zip code is required';\n    }\n    if (!shelfLife.trim()) {\n      errors.shelfLife = 'Zip code is required';\n    }\n    if (!shelfLifeManu.trim()) {\n      errors.shelfLifeManu = 'Zip code is required';\n    }\n    if (!storageMethod.trim()) {\n      errors.storageMethod = 'Zip code is required';\n    }\n    if (!ingreList.trim()) {\n      errors.ingreList = 'Zip code is required';\n    }\n    if (!tips.trim()) {\n      errors.tips = 'Zip code is required';\n    }\n    if (!servicePerCont.trim()) {\n      errors.servicePerCont = 'Zip code is required';\n    }\n    if (!serviceSizeWt.trim()) {\n      errors.serviceSizeWt = 'Zip code is required';\n    }\n    if (!serviceSizeQty.trim()) {\n      errors.serviceSizeQty = 'Zip code is required';\n    }\n    if (!calories.trim()) {\n      errors.calories = 'Zip code is required';\n    }\n    if (!cholestrol.trim()) {\n      errors.cholestrol = 'Zip code is required';\n    }\n    if (!sodium.trim()) {\n      errors.sodium = 'Zip code is required';\n    }\n    if (!totalFat.trim()) {\n      errors.totalFat = 'Zip code is required';\n    }\n    if (!saturatedFat.trim()) {\n      errors.saturatedFat = 'Zip code is required';\n    }\n    if (!transFat.trim()) {\n      errors.transFat = 'Zip code is required';\n    }\n    if (!totalCarboht.trim()) {\n      errors.totalCarboht = 'Zip code is required';\n    }\n    if (!dietaryFiber.trim()) {\n      errors.dietaryFiber = 'Zip code is required';\n    }\n    if (!totalSugar.trim()) {\n      errors.totalSugar = 'Zip code is required';\n    }\n    if (!addedSugar.trim()) {\n      errors.addedSugar = 'Zip code is required';\n    }\n    if (!protein.trim()) {\n      errors.protein = 'Zip code is required';\n    }\n    if (!vitD.trim()) {\n      errors.vitD = 'Zip code is required';\n    }\n    if (!calcuim.trim()) {\n      errors.calcuim = 'Zip code is required';\n    }\n    if (!iron.trim()) {\n      errors.iron = 'Zip code is required';\n    }\n    if (!potassium.trim()) {\n      errors.potassium = 'Zip code is required';\n    }\n    \n    console.log(errors);\n    // Add validations for other fields\n\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n \n    \n    const addProductAction = async (e) => {\n        e.preventDefault();\n        if(validateForm()){\n          setIsSubmitting(true)\n          let payload = {\n              manuDesc: manuDesc,\n              name: name,\n              distItemNum:distItemNum,\n              manuItemNum:manuItemNum,\n              manuMarkStmt:manuMarkStmt,\n              manufacturerId: manufacturerId,\n              productType: productType,\n              caseDimeTitle: caseDimeTitle,\n              caseDimeLength: caseDimeLength,\n              caseDimeWidth: caseDimeWidth,\n              caseDimeHeight: caseDimeHeight,\n              servingSize: servingSize,\n              shelfLifeManu: shelfLifeManu,\n              storageMethod: storageMethod,\n              tips: tips,\n              ingreList: ingreList,\n              servicePerCont: servicePerCont,\n              serviceSizeQty: serviceSizeQty,\n              serviceSizeWt: serviceSizeWt,\n              shelfLife: shelfLife,\n              masterPack: masterPack,\n              grossCaseWeight: grossCaseWeight,\n              masterUnitSize: masterUnitSize,\n              gtinNum: gtinNum,\n              caseCount: caseCount,\n              calories: calories,\n              cholestrol: cholestrol,\n              totalFat: totalFat,\n              saturatedFat: saturatedFat,\n              transFat: transFat,\n              sodium: sodium,\n              totalCarboht: totalCarboht,\n              dietaryFiber: dietaryFiber,\n              totalSugar: totalSugar,\n              addedSugar: addedSugar,\n              protein: protein,\n              vitD: vitD,\n              calcuim: calcuim,\n              iron: iron,\n              potassium: potassium,\n              cnLabel: cnLabel,\n              isActive: isActive\n          }\n          const productImages = formData.map(data => ({\n            imageType: data.imageType,\n            image: data.base64Image,\n          }));\n\n          const dataToSend = {\n            ...payload,\n            images: JSON.stringify(productImages)\n          };\n          axios.post('/product/create', dataToSend, {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }} )\n          .then((r) => {\n              setIsSubmitting(false)\n              navigate(\"/products\");\n          })\n          .catch((e) => {\n              setIsSubmitting(false)\n              toast.error(\"There is something wrong !!\");\n          });\n        }else{\n          toast.error(\"Please fill all required field\");\n        }\n    }\n  return (\n    <div className=\"bg-body-tertiary min-vh-75 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CAlert className='mb-4' color='danger'>Note: All fields are required except GTIN Number, if any field not available please input 0 or NA !!</CAlert>\n        <CForm className=\"row g-3\" onSubmit={(e)=>addProductAction(e)}>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={12}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>MFG Product Information</CCardHeader>\n              <CCardBody className=\"p-4\">\n                <CRow className='mb-4'>\n                <CCol md={6}>\n                  <CFormSelect id=\"manufacturerId\" label=\"Manufacturer\" name='manufacturerId' onChange={(e)=>{setManufacturerId(e.target.value)}} value={manufacturerId} invalid={!!errors.manufacturerId}>\n                    <option>...Choose</option>\n                    {clients.map((e, key) => {\n                        return <option key={key} value={e.id}>{e.companyName}</option>;\n                    })}\n                  </CFormSelect>\n                </CCol>\n                  <CCol md={6}>\n                    <CFormInput type=\"number\" id=\"manuItemNum\" label=\"Manufacturer Item Number\" onChange={(e)=>{setManuItemNum(e.target.value)}} value={manuItemNum} name='manuItemNum' invalid={!!errors.manuItemNum} />\n                  </CCol>\n\n                </CRow>\n\n                <CRow className='mb-4'>\n                  <CCol md={6}>\n                    <CFormInput type=\"text\" id=\"distItemNum\" label=\"Distributor Item Number\" onChange={(e)=>{setDistItemNum(e.target.value)}} value={distItemNum} name='distItemNum' invalid={!!errors.distItemNum} />\n                  </CCol>\n                    <CCol md={6}>\n                      <CFormInput type=\"number\" id=\"gtinNum\" label=\"GTIN Number\" onChange={(e)=>{setGtinNum(e.target.value)}} value={gtinNum} name='gtinNum' />\n                    </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                <CCol md={12}>\n                  <CFormInput type=\"text\" id=\"name\" label=\"Name\" onChange={(e)=>{setName(e.target.value)}} value={name} name='name' invalid={!!errors.name} />\n                </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"manuDesc\" label=\"Product Description\" onChange={(e)=>{setManuDesc(e.target.value)}} value={manuDesc} name='manuDesc' invalid={!!errors.manuDesc}></CFormTextarea>\n                  </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"manuMarkStmt\" label=\"Product Marketing Statement\" onChange={(e)=>{setManuMarkStmt(e.target.value)}} value={manuMarkStmt} name='manuMarkStmt' invalid={!!errors.manuMarkStmt}></CFormTextarea>\n                  </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                <CCol md={6}>\n                  <CFormSelect id=\"productType\" label=\"Product Type\" name='productType' onChange={(e)=>{setProductType(e.target.value)}} value={productType} invalid={!!errors.productType}>\n                    <option>Choose...</option>\n                    <option value='Paper' >Paper</option>\n                    <option value='Disposables' >Disposables</option>\n                    <option value='Beverages' >Beverages</option>\n                    <option value='Food-Frozen' >Food-Frozen</option>\n                    <option value='Food-Fresh' >Food-Fresh</option>\n                    <option value='DryFoods' >Dry Foods</option>\n                    <option value='SmallWares' >Small Wares</option>\n                  </CFormSelect>\n                </CCol>\n                </CRow>\n                </CCardBody>\n                </CCard>\n                </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md={9} lg={7} xl={12}>                    \n                    <CCard className=\"mb-4\">\n                      <CCardHeader>Product Images</CCardHeader>\n                      <CCardBody className=\"p-4\">\n                      {formData.map((data, index) => (\n                        <CRow key={index} className=\"mb-3\">\n                          <CCol>\n                            <CFormSelect\n                              id={`imageType${index}`}\n                              name=\"imageType\"\n                              value={data.imageType}\n                              onChange={(e) => handleInputChange(index, e)} \n                            >\n                              <option value=\"\">...Choose</option>\n                              <option value=\"close\">Closed Case</option>\n                              <option value=\"open\">Open Case</option>\n                              <option value=\"innerPack\">Inner Pack</option>\n                              <option value=\"raw\">Raw/Uncooked</option>\n                              <option value=\"plated\">Plated</option>\n                              <option value=\"styled\">Styled</option>\n                            </CFormSelect>\n                          </CCol>\n                          <CCol>\n                            <CFormInput\n                              type=\"file\"\n                              id={`productImage${index}`}\n                              name=\"logo\"\n                              onChange={(e) => handleInputChange(index, e)}\n                            />\n                            {data.logoFile && <CImage rounded thumbnail width={200} height={200} src={data.logoFile} />}\n                          </CCol>\n                          <CCol>\n                            <CButton color=\"danger\" onClick={() => handleRemoveForm(index)}>\n                              Remove\n                            </CButton>\n                          </CCol>\n                        </CRow>\n                      ))}\n                      <CButton type=\"button\" className='btn btn-primary' onClick={handleAddForm}>\n                        Add Image\n                      </CButton>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md={9} lg={7} xl={12}>\n                    \n                    <CCard className=\"mb-4\">\n                    <CCardHeader>Product Attributes</CCardHeader>\n                  <CCardBody className=\"p-4\">\n                    \n                <CRow className='mb-4'>\n                    <CCol>\n                    <CFormInput type='number' locale=\"en-US\" id=\"caseCount\" label=\"Case Count\" onChange={(e)=>{setCaseCount(e.target.value)}} value={caseCount} name='caseCount' invalid={!!errors.caseCount}/>\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"masterPack\" label=\"Master Pack\" onChange={(e)=>{setMasterPack(e.target.value)}} value={masterPack} name='masterPack' invalid={!!errors.masterPack} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"grossCaseWeight\" label=\"Gross Case Weight\" onChange={(e)=>{setGrossCaseWeight(e.target.value)}} value={grossCaseWeight} name='grossCaseWeight' invalid={!!errors.grossCaseWeight} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"masterUnitSize\" label=\"Master Unit Size\" onChange={(e)=>{setMasterUnitSize(e.target.value)}} value={masterUnitSize} name='masterUnitSize' invalid={!!errors.masterUnitSize} />\n                    </CCol>\n                </CRow>\n                    <CRow className='mb-4'>\n                      <CCol>\n                        <CFormInput type='text' id=\"caseDimeTitle\" name=\"caseDimeTitle\" label=\"Case Dimensions\" placeholder=\"title\" onChange={(e)=>{setCaseDimeTitle(e.target.value)}} value={caseDimeTitle}  invalid={!!errors.caseDimeTitle}/>\n                      </CCol>\n                      <CCol>\n                      <CFormInput type=\"number\" id=\"caseDimeLength\" label=\"Length\" onChange={(e)=>{setCaseDimeLength(e.target.value)}} value={caseDimeLength} name='masterUnitSize' invalid={!!errors.caseDimeLength} />\n                      </CCol>\n                      <CCol>\n                      <CFormInput type=\"number\" id=\"caseDimeWidth\" label=\"Width\" onChange={(e)=>{setCaseDimeWidth(e.target.value)}} value={caseDimeWidth} name='masterUnitSize' invalid={!!errors.caseDimeWidth} />\n                      </CCol>\n                      <CCol>\n                      <CFormInput type=\"number\" id=\"caseDimeHeight\" label=\"Height\" onChange={(e)=>{setCaseDimeHeight(e.target.value)}} value={caseDimeHeight} name='masterUnitSize' invalid={!!errors.caseDimeHeight} />\n                      </CCol>\n\n                    </CRow>\n                    <CRow className='mb-4'>\n                    <CCol>\n                      <CFormInput type='text' id=\"shelfLifeManu\" label=\"Shelf Life from Manufacturer\" name=\"shelfLifeManu\" onChange={(e)=>{setShelfLifeManu(e.target.value)}} value={shelfLifeManu} invalid={!!errors.shelfLifeManu}/>\n                    </CCol>\n                    <CCol>\n                      <CFormSelect id=\"storageMethod\" label=\"Storage Method\" name='storageMethod' onChange={(e)=>{setStorageMethod(e.target.value)}} value={storageMethod} invalid={!!errors.storageMethod}>\n                        <option>Choose...</option>\n                        <option value='Dry' >Dry</option>\n                        <option value='Refrigerated' >Refrigerated</option>\n                        <option value='Frozen' >Frozen</option>\n                      </CFormSelect>\n                    </CCol>\n                    <CCol>\n                      <CFormSelect id=\"shelfLife\" label=\"Shelf Life\" name='shelfLife' onChange={(e)=>{setshelfLife(e.target.value)}} value={shelfLife} invalid={!!errors.shelfLife} >\n                        <option>Choose...</option>\n                        <option value='UseByDate' >Use By Date</option>\n                        <option value='days365' >365 days</option>\n                        <option value='days365Plus' >365 days plus</option>\n                      </CFormSelect>\n                    </CCol>\n                    </CRow>\n                    <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"ingreList\" label=\"List of all Ingredients\" onChange={(e)=>{setIngreList(e.target.value)}} value={ingreList} name='ingreList' invalid={!!errors.ingreList}></CFormTextarea>\n                  </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"tips\" label=\"Tips & Handling\" onChange={(e)=>{setTips(e.target.value)}} value={tips} name='tips' invalid={!!errors.tips}></CFormTextarea>\n                  </CCol>\n                </CRow>\n                  </CCardBody>\n                </CCard>\n                  </CCol>\n            </CRow>\n            <CRow>\n              <CCard>\n                <CCardHeader>Nutritional Facts</CCardHeader>\n                <CCardBody className=\"p-4\">\n                <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"calories\" label=\"Calories\" onChange={(e)=>{setCalories(e.target.value)}} value={calories} name='calories' invalid={!!errors.calories} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"cholestrol\" label=\"Cholesterol (mg)\" onChange={(e)=>{setCholestrol(e.target.value)}} value={cholestrol} name='cholestrol' invalid={!!errors.cholestrol}/>\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"sodium\" label=\"Sodium (mg)\" onChange={(e)=>{setSodium(e.target.value)}} value={sodium} name='sodium' invalid={!!errors.sodium} />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"totalFat\" label=\"Total Fat (g)\" onChange={(e)=>{setTotalFat(e.target.value)}} value={totalFat} name='totalFat' invalid={!!errors.totalFat} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"saturatedFat\" label=\"Saturated Fat (g)\" onChange={(e)=>{setSaturatedFat(e.target.value)}} value={saturatedFat} name='saturatedFat' invalid={!!errors.saturatedFat} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"transFat\" label=\"Trans Fat (g)\" onChange={(e)=>{setTransFat(e.target.value)}} value={transFat} name='transFat' invalid={!!errors.transFat} />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"totalCarboht\" label=\"Total Carbohydrate (g)\" onChange={(e)=>{setTotalCarboht(e.target.value)}} value={totalCarboht} name='totalCarboht' invalid={!!errors.totalCarboht} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"totalSugar\" label=\"Total Sugars (g)\" onChange={(e)=>{setTotalSugar(e.target.value)}} value={totalSugar} name='totalSugar' invalid={!!errors.totalSugar} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"addedSugar\" label=\"Added Sugars (g)\" onChange={(e)=>{setAddedSugar(e.target.value)}} value={addedSugar} name='addedSugar' invalid={!!errors.addedSugar}/>\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"protein\" label=\"Protein (g)\" onChange={(e)=>{setProtein(e.target.value)}} value={protein} name='protein' invalid={!!errors.protein} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"dietaryFiber\" label=\"Dietary Fiber (g)\" onChange={(e)=>{setDietaryFiber(e.target.value)}} value={dietaryFiber} name='dietaryFiber' invalid={!!errors.dietaryFiber} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"vitD\" label=\" Vitamin D (mcg)\" onChange={(e)=>{setVitD(e.target.value)}} value={vitD} name='vitD' invalid={!!errors.vitD} />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"calcuim\" label=\"Calcium (mg)\" onChange={(e)=>{setCalcuim(e.target.value)}} value={calcuim} name='calcuim' invalid={!!errors.calcuim} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"iron\" label=\"Iron (mg)\" onChange={(e)=>{setIron(e.target.value)}} value={iron} name='iron' invalid={!!errors.iron} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"potassium\" label=\"Potassium (mg)\" onChange={(e)=>{setPotassium(e.target.value)}} value={potassium} name='potassium' invalid={!!errors.potassium} />\n                    </CCol>\n                  </CRow>\n                <CRow>\n                    <CCol>\n                      <CFormInput type='number' id=\"servingSize\" label=\"Serving Size\" name=\"servingSize\"  onChange={(e)=>{setServingSize(e.target.value)}} value={servingSize} invalid={!!errors.servingSize} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"servicePerCont\" label=\"Servings per Container\" onChange={(e)=>{setServicePerCont(e.target.value)}} value={servicePerCont} name='servicePerCont' invalid={!!errors.servicePerCont}/>\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"serviceSizeQty\" label=\"Serving Size Qty\" onChange={(e)=>{setServiceSizeQty(e.target.value)}} value={serviceSizeQty} name='serviceSizeQty' invalid={!!errors.serviceSizeQty} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"serviceSizeWt\" label=\"Serving Size Weight (g)\" onChange={(e)=>{setServiceSizeWt(e.target.value)}} value={serviceSizeWt} name='serviceSizeWt' invalid={!!errors.serviceSizeWt} />\n                    </CCol>\n                  </CRow>\n                    <CRow className='mb-4'>\n                      <CCol>\n                        <CFormSelect id=\"cnLabel\" label=\"C N Label\" name='cnLabel' onChange={(e)=>{setCnLabel(e.target.value)}} value={cnLabel}  >\n                          <option value='Yes' >Yes</option>\n                          <option value='No' >No</option>\n                        </CFormSelect>\n                      </CCol>\n                    </CRow>\n              </CCardBody>\n              </CCard>\n              </CRow>\n              <CRow>\n                <CCard className=\"mb-4\">\n                  <CCardHeader>Visibility</CCardHeader>\n                  <CCardBody className=\"p-4\">\n                    <CRow className='mb-4'>\n                      <CCol>\n                        <CFormSelect id=\"isActive\" label=\"Published Product\" name='isActive' onChange={(e)=>{setIsActive(e.target.value)}} value={isActive} >\n                          <option value='1' >Published</option>\n                          <option value='0' >Unpublished</option>\n                        </CFormSelect>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n                </CCard>\n              </CRow>\n              <CRow className='p-4'>\n              <CCol xs={12}>\n                  <CButton color=\"primary\" type=\"submit\" disabled={isSubmitting} className='float-end'>Add Product</CButton>\n                </CCol>\n              </CRow>\n              </CForm>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default AddProduct\n"],"names":["AddProduct","navigate","useNavigate","manuDesc","setManuDesc","useState","distItemNum","setDistItemNum","name","setName","manuItemNum","setManuItemNum","productType","setProductType","caseDimeTitle","setCaseDimeTitle","caseDimeLength","setCaseDimeLength","caseDimeWidth","setCaseDimeWidth","caseDimeHeight","setCaseDimeHeight","servingSize","setServingSize","shelfLifeManu","setShelfLifeManu","storageMethod","setStorageMethod","tips","setTips","ingreList","setIngreList","servicePerCont","setServicePerCont","serviceSizeQty","setServiceSizeQty","serviceSizeWt","setServiceSizeWt","shelfLife","setshelfLife","manufacturerId","setManufacturerId","manuMarkStmt","setManuMarkStmt","caseCount","setCaseCount","masterPack","setMasterPack","grossCaseWeight","setGrossCaseWeight","masterUnitSize","setMasterUnitSize","gtinNum","setGtinNum","calories","setCalories","cholestrol","setCholestrol","totalFat","setTotalFat","saturatedFat","setSaturatedFat","transFat","setTransFat","sodium","setSodium","totalCarboht","setTotalCarboht","dietaryFiber","setDietaryFiber","totalSugar","setTotalSugar","addedSugar","setAddedSugar","protein","setProtein","vitD","setVitD","calcuim","setCalcuim","iron","setIron","potassium","setPotassium","cnLabel","setCnLabel","isActive","setIsActive","isSubmitting","setIsSubmitting","formData","setFormData","imageType","logo","logoFile","base64Image","clients","setClients","errors","setErrors","handleInputChange","async","index","event","value","files","target","updatedFormData","file","URL","createObjectURL","reader","FileReader","readAsDataURL","onloadend","result","useEffect","axios","get","headers","Authorization","concat","localStorage","getItem","then","response","data","catch","error","console","addProductAction","e","preventDefault","validateForm","trim","log","Object","keys","length","payload","productImages","map","image","dataToSend","images","JSON","stringify","post","r","toast","_jsx","className","children","_jsxs","CContainer","CAlert","color","CForm","onSubmit","CRow","CCol","md","lg","xl","CCard","CCardHeader","CCardBody","CFormSelect","id","label","onChange","invalid","key","companyName","CFormInput","type","CFormTextarea","CImage","rounded","thumbnail","width","height","src","CButton","onClick","splice","handleRemoveForm","handleAddForm","locale","placeholder","xs","disabled"],"sourceRoot":""}