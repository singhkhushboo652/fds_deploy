{"version":3,"file":"static/js/7921.4769c917.chunk.js","mappings":"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","sources":["views/pages/product/EditProduct.js","../node_modules/@coreui/react-pro/src/components/form/CFormTextarea.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CImage,\n  CFormSelect,\n  CFormCheck,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CAlert,\n  CCardHeader,\n  CDatePicker,\n  CFormTextarea,\n  CFormLabel,\n  CMultiSelect,\n} from '@coreui/react-pro'\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\nimport Select from 'react-select'; // Import react-select\n\nconst EditProduct = () => {\n  const navigate = useNavigate();\n  const productId = useLocation().state?.productId;\n  const permission = useLocation().state?.permission;\n    const [manuDesc, setManuDesc] = useState(\"\")\n    const [distItemNum, setDistItemNum] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [manuItemNum, setManuItemNum] = useState(\"\")\n    const [productType, setProductType] = useState(\"\")\n    const [caseDimeTitle, setCaseDimeTitle] = useState(\"\")\n    const [caseDimeLength, setCaseDimeLength] = useState(0)\n    const [caseDimeWidth, setCaseDimeWidth] = useState(0)\n    const [caseDimeHeight, setCaseDimeHeight] = useState(0)\n    const [servingSize, setServingSize] = useState(\"\")\n    const [shelfLifeManu, setShelfLifeManu] = useState(\"\")\n    const [storageMethod, setStorageMethod] = useState(\"\")\n    const [tips, setTips] = useState(\"\")\n    const [ingreList, setIngreList] = useState(\"\")\n    const [servicePerCont, setServicePerCont] = useState(\"\")\n    const [serviceSizeQty, setServiceSizeQty] = useState(\"\")\n    const [serviceSizeWt, setServiceSizeWt] = useState(\"\")\n    const [serviceSizeWtUOM, setServiceSizeWtUOM] = useState(\"\")\n    const [shelfLife, setshelfLife] = useState(\"\")\n    \n    const [distributerIds, setDistributerIds] = useState(\"\")\n    const [allergyFreeIds, setAllergyFreeIds] = useState(\"\")\n    const [allergyContainIds, setAllergyContainIds] = useState(\"\")\n    const [selectedDistributer, setSelectedDistributer] = useState([]); \n    const [manuMarkStmt, setManuMarkStmt] = useState(\"\")\n    const [caseCount, setCaseCount] = useState(\"\")\n    const [masterPack, setMasterPack] = useState(\"\")\n    const [grossCaseWeight, setGrossCaseWeight] = useState(\"\")\n    const [masterUnitSize, setMasterUnitSize] = useState(\"\")\n    const [gtinNum, setGtinNum] = useState(\"\")\n\n    const [calories, setCalories] = useState(\"\")\n    const [cholestrol, setCholestrol] = useState(\"\")\n    const [totalFat, setTotalFat] = useState(\"\")\n    const [saturatedFat, setSaturatedFat] = useState(\"\")\n    const [transFat, setTransFat] = useState(\"\")\n    const [sodium, setSodium] = useState(\"\")\n    const [totalCarboht, setTotalCarboht] = useState(\"\")\n    const [dietaryFiber, setDietaryFiber] = useState(\"\")\n    const [totalSugar, setTotalSugar] = useState(\"\")\n    const [addedSugar, setAddedSugar] = useState(\"\")\n    const [protein, setProtein] = useState(\"\")\n    const [vitD, setVitD] = useState(\"\")\n    const [calcuim, setCalcuim] = useState(\"\")\n    const [iron, setIron] = useState(\"\")\n    const [potassium, setPotassium] = useState(\"\")\n    const [casePack, setCasePack] = useState(\"\")\n    const [caseBreakable, setCaseBreakable] = useState(\"\")\n    const [brokenCase, setBrokenCase] = useState(\"\")\n    const [netWeight, setNetWeight] = useState(\"\")\n    const [unitMeasure, setUnitMeasure] = useState(\"\")\n\n    const [cnLabel, setCnLabel] = useState(\"\")\n    const [isActive, setIsActive] = useState(\"\")\n\n    const [formData, setFormData] = useState([{ imageType: '', logo: '', logoFile: null, base64Image: '' }]);\n\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const [clients, setClients] = useState([])\n    const [allergies, setAllergies] = useState([])\n    const [errors, setErrors] = useState({});\n\n    const handleAddForm = () => {\n      setFormData([...formData, { imageType: '', logo: '', logoFile: null, base64Image: '' }]);\n    };\n  \n    const handleRemoveForm = (index) => {\n      const updatedFormData = [...formData];\n      updatedFormData.splice(index, 1);\n      setFormData(updatedFormData);\n    };\n  \n    const handleInputChange = async (index, event) => {\n      const { name, value, files } = event.target;\n      const updatedFormData = [...formData];\n  \n      if (files) {\n        const file = files[0];\n        updatedFormData[index]['logoFile'] = URL.createObjectURL(file);\n  \n        // Convert the image file to a base64 encoded string\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n          updatedFormData[index]['base64Image'] = reader.result;\n          setFormData(updatedFormData);\n        };\n      } else {\n        updatedFormData[index][name] = value;\n        setFormData(updatedFormData);\n      }\n    };\n\n    useEffect(() => {  \n    axios.get('client/findAll/distributer', {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }}).then(response => {\n      let dataFromDatabase = response.data.data;\n      const formattedOptions = dataFromDatabase.map(item => ({\n        value: item.id,\n        label: item.companyName\n      }));\n      setClients(formattedOptions);  \n    })\n    .catch(error => console.error('error fetching clients', error));\n\n    const allergies = [\n      {value: 'milk', label: 'Milk'},\n      {value: 'eggs', label: 'Eggs'},\n      {value: 'fish', label: 'Fish'},\n      {value: 'crustacean shellfish', label: 'Crustacean Shellfish'},\n      {value: 'tree nuts', label: 'Tree Nuts'},\n      {value: 'peanuts', label: 'Peanuts'},\n      {value: 'wheat', label: 'Wheat'},\n      {value: 'soybeans', label: 'Soybeans'}\n    ]\n    setAllergies(allergies);\n  }, [])\n\n    useEffect(() => {\n      axios.get('product/'+productId, {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }})\n          .then((response) => {\n            if(response.data){\n              \n              let productDetail = response.data.data;\n              setName(productDetail.name);\n              setProductType(productDetail.productType);\n              setManuItemNum (productDetail.manuItemNum);\n              setManuDesc(productDetail.manuDesc);\n              setDistItemNum(productDetail.distItemNum);\n              setManuMarkStmt(productDetail.manuMarkStmt);\n              setSelectedDistributer(productDetail.distributers.map(br => ({ value: br.id, label: br.companyName }))); \n              setGtinNum(productDetail.gtinNum);\n              setCaseCount(productDetail.caseCount);\n              setMasterPack(productDetail.masterPack);\n              setGrossCaseWeight(productDetail.grossCaseWeight);\n              setCaseDimeLength(productDetail.caseDimeLength);\n              setCaseDimeWidth(productDetail.caseDimeWidth);\n              setCaseDimeHeight(productDetail.caseDimeHeight);\n              setServingSize(productDetail.servingSize);\n              setShelfLifeManu(productDetail.shelfLifeManu);\n              setStorageMethod(productDetail.storageMethod);\n              setshelfLife(productDetail.shelfLife);\n              setIngreList(productDetail.ingreList);\n              setTips(productDetail.tips);\n              setServicePerCont(productDetail.servicePerCont);\n              setServiceSizeQty(productDetail.serviceSizeQty);\n              setServiceSizeWt(productDetail.serviceSizeWt);\n              setCalories(productDetail.calories);\n              setCholestrol(productDetail.cholestrol);\n              setSodium(productDetail.sodium);\n              setTotalFat(productDetail.totalFat);\n              setSaturatedFat(productDetail.saturatedFat);\n              setTransFat(productDetail.transFat);\n              setTotalSugar(productDetail.totalSugar);\n              setAddedSugar(productDetail.addedSugar);\n              setTotalCarboht(productDetail.totalCarboht);\n              setDietaryFiber(productDetail.dietaryFiber);\n              setProtein(productDetail.protein);\n              setVitD(productDetail.vitD);\n              setCalcuim(productDetail.calcuim);\n              setIron(productDetail.iron);\n              setPotassium(productDetail.potassium);\n              setCnLabel(productDetail.cnLabel);\n              setIsActive(productDetail.isActive);\n              let images = productDetail.images;\n              let imageData = []\n              images.map(img => {\n                let imgDetail = { imageType: img.imageType, logo: img.imagePath, logoFile: process.env.REACT_APP_API_URL+img.imagePath, base64Image: '', id: img.id }\n                imageData.push(imgDetail);\n              });\n              setFormData(imageData); \n              \n              let casePackValue = (caseCount/masterPack); \n              setCasePack(casePackValue+' '+unitMeasure);\n              \n              let netWeightValue = (caseCount*masterPack); \n              setNetWeight(netWeightValue);\n                        \n              let casedimension = caseDimeLength +'L X '+caseDimeWidth+'W X '+caseDimeHeight+'H';\n              setCaseDimeTitle(casedimension);\n            }\n          })\n  }, [])\n\n  const validateForm = () => {\n    const errors = {};\n    if (!manuItemNum.trim()) {\n      errors.manuItemNum = 'First Name is required';\n    }\n    if (!manuDesc.trim()) {\n      errors.manuDesc = 'Last Name is required';\n    }\n    if (!name.trim()) {\n      errors.name = 'Email is required';\n    }\n    if (!manuMarkStmt.trim()) {\n      errors.manuMarkStmt = 'username is required';\n    }\n    if (!productType.trim()) {\n      errors.productType = 'Work address is required';\n    }\n    if (!caseCount.trim()) {\n      errors.caseCount = 'Work address is required';\n    }\n    if (!masterPack.trim()) {\n      errors.masterPack = 'State is required';\n    }\n    if (!grossCaseWeight.trim()) {\n      errors.grossCaseWeight = 'City is required';\n    }\n    if (!masterUnitSize.trim()) {\n      errors.masterUnitSize = 'Zip code is required';\n    }\n    if (!caseDimeTitle.trim()) {\n      errors.caseDimeTitle = 'Zip code is required';\n    }\n    if (!servingSize.trim()) {\n      errors.servingSize = 'Zip code is required';\n    }\n    if (!shelfLife.trim()) {\n      errors.shelfLife = 'Zip code is required';\n    }\n    if (!shelfLifeManu.trim()) {\n      errors.shelfLifeManu = 'Zip code is required';\n    }\n    if (!storageMethod.trim()) {\n      errors.storageMethod = 'Zip code is required';\n    }\n    if (!ingreList.trim()) {\n      errors.ingreList = 'Zip code is required';\n    }\n    if (!tips.trim()) {\n      errors.tips = 'Zip code is required';\n    }\n    if (!servicePerCont.trim()) {\n      errors.servicePerCont = 'Zip code is required';\n    }\n    if (!serviceSizeWt.trim()) {\n      errors.serviceSizeWt = 'Zip code is required';\n    }\n    if (!serviceSizeQty.trim()) {\n      errors.serviceSizeQty = 'Zip code is required';\n    }\n    if (!calories.trim()) {\n      errors.calories = 'Zip code is required';\n    }\n    if (!cholestrol.trim()) {\n      errors.cholestrol = 'Zip code is required';\n    }\n    if (!sodium.trim()) {\n      errors.sodium = 'Zip code is required';\n    }\n    if (!totalFat.trim()) {\n      errors.totalFat = 'Zip code is required';\n    }\n    if (!saturatedFat.trim()) {\n      errors.saturatedFat = 'Zip code is required';\n    }\n    if (!transFat.trim()) {\n      errors.transFat = 'Zip code is required';\n    }\n    if (!totalCarboht.trim()) {\n      errors.totalCarboht = 'Zip code is required';\n    }\n    if (!dietaryFiber.trim()) {\n      errors.dietaryFiber = 'Zip code is required';\n    }\n    if (!totalSugar.trim()) {\n      errors.totalSugar = 'Zip code is required';\n    }\n    if (!addedSugar.trim()) {\n      errors.addedSugar = 'Zip code is required';\n    }\n    if (!protein.trim()) {\n      errors.protein = 'Zip code is required';\n    }\n    if (!vitD.trim()) {\n      errors.vitD = 'Zip code is required';\n    }\n    if (!calcuim.trim()) {\n      errors.calcuim = 'Zip code is required';\n    }\n    if (!iron.trim()) {\n      errors.iron = 'Zip code is required';\n    }\n    if (!potassium.trim()) {\n      errors.potassium = 'Zip code is required';\n    }\n    \n    console.log(errors);\n    // Add validations for other fields\n\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleChangeAllergyFree = (selectedOptions) => {\n    const ids = selectedOptions.map(option => option.value);\n        console.log(ids);\n        setAllergyFreeIds(ids);\n  };\n\n  const handleChangeAllergyContain = (selectedOptions) => {\n    const ids = selectedOptions.map(option => option.value);\n        console.log(ids);\n        setAllergyContainIds(ids);\n  };\n\n  const calculateCasePack = () => {\n    let casePackValue = (caseCount/masterPack); \n    setCasePack(casePackValue+' '+unitMeasure);\n  }\n\n  const calculateNetWeight = () => {\n    let netWeightValue = (caseCount*masterPack); \n    setNetWeight(netWeightValue);\n  }\n\n  const calculateCaseDime = () =>{\n    let casedimension = caseDimeLength +'L X '+caseDimeWidth+'W X '+caseDimeHeight+'H';\n    setCaseDimeTitle(casedimension);\n  }\n \n \n    const editProductAction = async (e) => {\n        e.preventDefault();\n        setIsSubmitting(true)\n        const productImages = formData.map(data => ({\n          imageType: data.imageType,\n          image: data.base64Image || data.logo,\n          id: data.id || null\n        }));\n        let payload = {\n          manuDesc: manuDesc,\n            name: name,\n            distItemNum:distItemNum,\n            manuItemNum:manuItemNum,\n            manuMarkStmt:manuMarkStmt,\n            distributerIds: selectedDistributer.map(client => client.value),\n            productType: productType,\n            caseDimeTitle: caseDimeTitle,\n            caseDimeLength: caseDimeLength,\n            caseDimeWidth: caseDimeWidth,\n            caseDimeHeight: caseDimeHeight,\n            servingSize: servingSize,\n            shelfLifeManu: shelfLifeManu,\n            storageMethod: storageMethod,\n            tips: tips,\n            ingreList: ingreList,\n            servicePerCont: servicePerCont,\n            serviceSizeQty: serviceSizeQty,\n            serviceSizeWt: serviceSizeWt,\n            shelfLife: shelfLife,\n            masterPack: masterPack,\n            grossCaseWeight: grossCaseWeight,\n            masterUnitSize: masterUnitSize,\n            gtinNum: gtinNum,\n            caseCount: caseCount,\n            calories: calories,\n            cholestrol: cholestrol,\n            totalFat: totalFat,\n            saturatedFat: saturatedFat,\n            transFat: transFat,\n            sodium: sodium,\n            totalCarboht: totalCarboht,\n            dietaryFiber: dietaryFiber,\n            totalSugar: totalSugar,\n            addedSugar: addedSugar,\n            protein: protein,\n            vitD: vitD,\n            calcuim: calcuim,\n            iron: iron,\n            potassium: potassium,\n            allergyContains: allergyContainIds,\n            allergyFree: allergyFreeIds,\n            caseBreakable: caseBreakable,\n            unitMeasure: unitMeasure,\n            brokenCase: brokenCase,\n            serviceSizeWtUOM:serviceSizeWtUOM,\n            cnLabel: cnLabel,\n            isActive: isActive,\n            images: productImages\n        }\n        axios.patch('/product/update/'+productId, payload, {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }} )\n        .then((r) => {\n          toast.success(r.data.message);     \n          setIsSubmitting(false)\n\n        })\n        .catch((e) => {\n            setIsSubmitting(false)\n            console.log(e);\n        });\n    }\n\n  return (\n    <div className=\"bg-body-tertiary min-vh-75 d-flex flex-row align-items-center\">\n      <CContainer>\n              <CForm className=\"row g-3\" onSubmit={(e)=>editProductAction(e)}>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={12}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>MFG Product Information</CCardHeader>\n              <CCardBody className=\"p-4\">\n                <CRow className='mb-4'>\n                <CCol md={6}>\n                  <CFormLabel htmlFor='Distributor'>Distributor</CFormLabel>\n                <Select\n                    label=\"Distributor\"\n                    options={clients}\n                    isMulti\n                    value={selectedDistributer}\n                    onChange={(selectedOptions) => setSelectedDistributer(selectedOptions)}\n                    placeholder=\"Select distributor...\"\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    closeMenuOnSelect={false}\n                    styles={{\n                      control: (provided) => ({\n                        ...provided,\n                        borderRadius: 0,\n                        borderColor: '#ced4da',\n                      }),\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 9999,\n                      }),\n                    }}\n                  />\n                </CCol>\n                  <CCol md={6}>\n                    <CFormInput type=\"text\" id=\"manuItemNum\" label=\"Manufacturer Item Number\" onChange={(e)=>{setManuItemNum(e.target.value)}} value={manuItemNum} name='manuItemNum' />\n                  </CCol>\n                </CRow>\n\n                <CRow className='mb-4'>\n                  {/* <CCol md={6}>\n                    <CFormInput type=\"text\" id=\"distItemNum\" label=\"Distributor Item Number\" onChange={(e)=>{setDistItemNum(e.target.value)}} value={distItemNum} name='distItemNum' />\n                  </CCol> */}\n                    <CCol md={6}>\n                      <CFormInput type=\"number\" id=\"gtinNum\" label=\"GTIN Number\" onChange={(e)=>{setGtinNum(e.target.value)}} value={gtinNum} name='gtinNum' />\n                    </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                <CCol md={12}>\n                  <CFormInput type=\"text\" id=\"name\" label=\"Name\" onChange={(e)=>{setName(e.target.value)}} value={name} name='name' />\n                </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"manuDesc\" label=\"Product Description\" onChange={(e)=>{setManuDesc(e.target.value)}} value={manuDesc} name='manuDesc'></CFormTextarea>\n                  </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"manuMarkStmt\" label=\"Product Marketing Statement\" onChange={(e)=>{setManuMarkStmt(e.target.value)}} value={manuMarkStmt} name='manuMarkStmt'></CFormTextarea>\n                  </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                <CCol md={6}>\n                  <CFormSelect id=\"productType\" label=\"Product Type\" name='productType' onChange={(e)=>{setProductType(e.target.value)}} value={productType} >\n                    <option>Choose...</option>\n                    <option value='Paper' >Paper</option>\n                    <option value='Disposables' >Disposables</option>\n                    <option value='Beverages' >Beverages</option>\n                    <option value='FoodFrozen' >Food-Frozen</option>\n                    <option value='FoodFresh' >Food-Fresh</option>\n                    <option value='DryFoods' >Dry Foods</option>\n                    <option value='SmallWares' >Small Wares</option>\n                  </CFormSelect>\n                </CCol>\n                </CRow>\n                </CCardBody>\n                </CCard>\n                </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md={9} lg={7} xl={12}>                    \n                    <CCard className=\"mb-4\">\n                      <CCardHeader>Product Images</CCardHeader>\n                      <CCardBody className=\"p-4\">\n                      {formData.map((data, index) => (\n                        <CRow key={index} className=\"mb-3\">\n                          <CCol>\n                            <CFormSelect\n                              id={`imageType${index}`}\n                              name=\"imageType\"\n                              value={data.imageType}\n                              onChange={(e) => handleInputChange(index, e)}\n                            >\n                              <option value=\"\">...Choose</option>\n                              <option value=\"close\">Closed Case</option>\n                              <option value=\"open\">Open Case</option>\n                              <option value=\"innerPack\">Inner Pack</option>\n                              <option value=\"raw\">Raw/Uncooked</option>\n                              <option value=\"plated\">Plated</option>\n                              <option value=\"styled\">Styled</option>\n                            </CFormSelect>\n                          </CCol>\n                          <CCol>\n                            <CFormInput\n                              type=\"file\"\n                              id={`productImage${index}`}\n                              name=\"logo\"\n                              onChange={(e) => handleInputChange(index, e)}\n                            />\n                            {data.logoFile && <CImage rounded thumbnail width={200} height={200} src={data.logoFile} />}\n                          </CCol>\n                          <CCol>\n                            <CButton color=\"danger\" onClick={() => handleRemoveForm(index)}>\n                              Remove\n                            </CButton>\n                          </CCol>\n                        </CRow>\n                      ))}\n                      <CButton type=\"button\" onClick={handleAddForm} className='btn btn-primary'>\n                        Add Image\n                      </CButton>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md={9} lg={7} xl={12}>\n                    \n                    <CCard className=\"mb-4\">\n                    <CCardHeader>Product Attributes</CCardHeader>\n                  <CCardBody className=\"p-4\">\n                  <CRow className='mb-4'>\n                    <CCol>\n                    <CFormInput type='number' locale=\"en-US\" id=\"caseCount\" label=\"Units in Case\" onChange={(e)=>{setCaseCount(e.target.value)}} value={caseCount} name='caseCount' invalid={!!errors.caseCount}/>\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"masterPack\" label=\"Unit Size\" onChange={(e)=>{setMasterPack(e.target.value)}} value={masterPack} name='masterPack' invalid={!!errors.masterPack} />\n                    </CCol>\n                    <CCol>\n                    <CFormSelect id=\"unitMeasure\" label=\"Unit of Measure\" name='unitMeasure' onChange={(e)=>{setUnitMeasure(e.target.value)}} value={unitMeasure} invalid={!!errors.unitMeasure}>\n                        <option>Choose...</option>\n                        <option value='Pounds(LB)' >Pounds (LB)</option>\n                        <option value='Ounces(OZ)' >Ounces (OZ)</option>\n                        <option value='Grams(G)' >Grams (G)</option>\n                        <option value='Kilograms(KG)' >Kilograms (KG)</option>\n                        <option value='Gallons(GAL)' >Gallons (GAL)</option>\n                        <option value='Quarts(QT)' >Quarts (QT)</option>\n                        <option value='Pints(PT)' >Pints (PT)</option>\n                        <option value='FluidOunces(FLOZ)' >Fluid Ounces (FL OZ)</option>\n                        <option value='Liters(L)' >Liters (L)</option>\n                        <option value='Milliliters(ML)' >Milliliters (ML)</option>\n                        <option value='Dozen(DZ)' >Dozen (DZ)</option>\n                        <option value='Count(CT)' >Count (CT)</option>\n                        <option value='Each(EA)' >Each (EA)</option>\n                        <option value='Cases(CS)' >Cases (CS)</option>\n                        <option value='AveCatchWeight(CW)' >Ave Catch Weight (CW)</option>\n                      </CFormSelect>\n                    </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                    <CCol>\n                    <CFormInput type='text' locale=\"en-US\" id=\"casePack\" label=\"Case Pack\"  value={casePack} name='casePack' onClick={calculateCasePack} onMouseOver={calculateCasePack} />\n                    </CCol>\n                    <CCol>\n                      <CFormInput type=\"text\" id=\"netWeight\" label=\"Net Weight\" value={netWeight} name='netWeight' onClick={calculateNetWeight} onMouseOver={calculateNetWeight}/>\n                    </CCol>\n                    <CCol>\n                      <CFormSelect id=\"caseBreakable\" label=\"Case Breakable\" name='caseBreakable' value={caseBreakable} invalid={!!errors.caseBreakable} onChange={(e)=>{setCaseBreakable(e.target.value)}}>\n                        <option value='Yes' >Yes</option>\n                        <option value='No' >No</option>\n                      </CFormSelect>\n                    </CCol>\n                    <CCol>\n                      <CFormSelect id=\"brokenCase\" label=\"Broken Case UOM\" name='brokenCase' onChange={(e)=>{setBrokenCase(e.target.value)}} value={brokenCase} invalid={!!errors.brokenCase}>\n                        <option>Choose...</option>\n                        <option value='Pounds(LB)' >Pounds (LB)</option>\n                        <option value='Ounces(OZ)' >Ounces (OZ)</option>\n                        <option value='Gallons(GAL)' >Gallons (GAL)</option>\n                        <option value='Quarts(QT)' >Quarts (QT)</option>\n                        <option value='Pints(PT)' >Pints (PT)</option>\n                        <option value='Liters(L)' >Liters (L)</option>\n                        <option value='Milliliters(ML)' >Milliliters (ML)</option>\n                        <option value='Dozen(DZ)' >Dozen (DZ)</option>\n                        <option value='Count(CT)' >Count (CT)</option>\n                        <option value='Each(EA)' >Each (EA)</option>\n                      </CFormSelect>\n                    </CCol>\n                </CRow>\n                    \n                  <CRow className='mb-4'>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"grossCaseWeight\" label=\"Gross Case Weight\" onChange={(e)=>{setGrossCaseWeight(e.target.value)}} value={grossCaseWeight} name='grossCaseWeight' />\n                    </CCol>\n                  </CRow>\n                  <CRow className='mb-4'>\n                      <CCol>\n                      <CFormInput type=\"number\" id=\"caseDimeLength\" label=\"Length\" onChange={(e)=>{setCaseDimeLength(e.target.value)}} value={caseDimeLength} name='masterUnitSize' invalid={!!errors.caseDimeLength} />\n                      </CCol>\n                      <CCol>\n                      <CFormInput type=\"number\" id=\"caseDimeWidth\" label=\"Width\" onChange={(e)=>{setCaseDimeWidth(e.target.value)}} value={caseDimeWidth} name='masterUnitSize' invalid={!!errors.caseDimeWidth} />\n                      </CCol>\n                      <CCol>\n                      <CFormInput type=\"number\" id=\"caseDimeHeight\" label=\"Height\" onChange={(e)=>{setCaseDimeHeight(e.target.value)}} value={caseDimeHeight} name='masterUnitSize' invalid={!!errors.caseDimeHeight} />\n                      </CCol>\n                      <CCol>\n                        <CFormInput type='text' id=\"caseDimeTitle\" name=\"caseDimeTitle\" label=\"Case Dimensions\" placeholder=\"title\" value={caseDimeTitle} onClick={calculateCaseDime} onMouseOver={calculateCaseDime}/>\n                      </CCol>\n                    </CRow>\n                    <CRow className='mb-4'>\n                    <CCol>\n                      <CFormInput type='text' id=\"shelfLifeManu\" label=\"Shelf Life from Manufacturer\" name=\"shelfLifeManu\" onChange={(e)=>{setShelfLifeManu(e.target.value)}} value={shelfLifeManu} />\n                    </CCol>\n                    <CCol>\n                      <CFormSelect id=\"storageMethod\" label=\"Storage Method\" name='storageMethod' onChange={(e)=>{setStorageMethod(e.target.value)}} value={storageMethod} >\n                        <option>Choose...</option>\n                        <option value='Dry' >Dry</option>\n                        <option value='Refrigerated' >Refrigerated</option>\n                        <option value='Frozen' >Frozen</option>\n                      </CFormSelect>\n                    </CCol>\n                    <CCol>\n                      <CFormSelect id=\"shelfLife\" label=\"Shelf Life\" name='shelfLife' onChange={(e)=>{setshelfLife(e.target.value)}} value={shelfLife} >\n                        <option>Choose...</option>\n                        <option value='UseByDate' >Use By Date</option>\n                        <option value='days365' >365 days</option>\n                        <option value='days365Plus' >365 days plus</option>\n                      </CFormSelect>\n                    </CCol>\n                    </CRow>\n                    <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"ingreList\" label=\"List of all Ingredients\" onChange={(e)=>{setIngreList(e.target.value)}} value={ingreList} name='ingreList'></CFormTextarea>\n                  </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                  <CCol md={12}>\n                    <CFormTextarea id=\"tips\" label=\"Tips & Handling\" onChange={(e)=>{setTips(e.target.value)}} value={tips} name='tips'></CFormTextarea>\n                  </CCol>\n                </CRow>\n                <CRow className='mb-4'>\n                    <CCol>\n                    <CMultiSelect options={allergies} label=\"Allergy Info - Free From\" onChange={handleChangeAllergyFree} value={allergies.filter(option => allergyFreeIds.includes(option.value))}/>\n                    </CCol>\n                    <CCol>\n                    <CMultiSelect options={allergies} label=\"Allergy Info - Contains\" onChange={handleChangeAllergyContain} value={allergies.filter(option => allergyContainIds.includes(option.value))}/>\n                    </CCol>\n                </CRow>\n                  </CCardBody>\n                </CCard>\n                  </CCol>\n            </CRow>\n            <CRow>\n              <CCard>\n                <CCardHeader>Nutrition Facts - Based by Serving</CCardHeader>\n                <CCardBody className=\"p-4\">\n                <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"calories\" label=\"Calories\" onChange={(e)=>{setCalories(e.target.value)}} value={calories} name='calories' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"cholestrol\" label=\"Cholesterol (mg)\" onChange={(e)=>{setCholestrol(e.target.value)}} value={cholestrol} name='cholestrol' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"sodium\" label=\"Sodium (mg)\" onChange={(e)=>{setSodium(e.target.value)}} value={sodium} name='sodium' />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"totalFat\" label=\"Total Fat (g)\" onChange={(e)=>{setTotalFat(e.target.value)}} value={totalFat} name='totalFat' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"saturatedFat\" label=\"Saturated Fat (g)\" onChange={(e)=>{setSaturatedFat(e.target.value)}} value={saturatedFat} name='saturatedFat' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"transFat\" label=\"Trans Fat (g)\" onChange={(e)=>{setTransFat(e.target.value)}} value={transFat} name='transFat' />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"totalCarboht\" label=\"Total Carbohydrate (g)\" onChange={(e)=>{setTotalCarboht(e.target.value)}} value={totalCarboht} name='totalCarboht' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"totalSugar\" label=\"Total Sugars (g)\" onChange={(e)=>{setTotalSugar(e.target.value)}} value={totalSugar} name='totalSugar' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"addedSugar\" label=\"Added Sugars (g)\" onChange={(e)=>{setAddedSugar(e.target.value)}} value={addedSugar} name='addedSugar' />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"protein\" label=\"Protein (g)\" onChange={(e)=>{setProtein(e.target.value)}} value={protein} name='protein' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"dietaryFiber\" label=\"Dietary Fiber (g)\" onChange={(e)=>{setDietaryFiber(e.target.value)}} value={dietaryFiber} name='dietaryFiber' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"vitD\" label=\" Vitamin D (mcg)\" onChange={(e)=>{setVitD(e.target.value)}} value={vitD} name='vitD' />\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"calcuim\" label=\"Calcium (mg)\" onChange={(e)=>{setCalcuim(e.target.value)}} value={calcuim} name='calcuim' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"iron\" label=\"Iron (mg)\" onChange={(e)=>{setIron(e.target.value)}} value={iron} name='iron' />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"potassium\" label=\"Potassium (mg)\" onChange={(e)=>{setPotassium(e.target.value)}} value={potassium} name='potassium' />\n                    </CCol>\n                  </CRow>\n                <CRow>\n                    <CCol>\n                      <CFormInput type='number' id=\"servingSize\" label=\"Serving Size\" name=\"servingSize\"  onChange={(e)=>{setServingSize(e.target.value)}} value={servingSize} />\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"servicePerCont\" label=\"Servings per Container\" onChange={(e)=>{setServicePerCont(e.target.value)}} value={servicePerCont} name='servicePerCont' />\n                    </CCol>\n                    <CCol>\n                      <CFormSelect id=\"serviceSizeQty\" label=\"Serving Size UOM\" name='serviceSizeQty' onChange={(e)=>{setServiceSizeQty(e.target.value)}} value={serviceSizeQty}  >\n                        <optgroup label=\"Weight\">\n                            <option value='Pounds (lbs)' >Pounds (lbs)</option>\n                            <option value='Ounces (oz)' >Ounces (oz)</option>\n                            <option value='Grams (g)' >Grams (g)</option>\n                            <option value='Kilograms (kg)' >Kilograms (kg)</option>\n                        </optgroup>\n                        <optgroup label=\"Volume\">\n                            <option value='Gallons (gal)' >Gallons (gal)</option>\n                            <option value='Quarts (qt)' >Quarts (qt)</option>\n                            <option value='Pints (pt)' >Pints (pt)</option>\n                            <option value='Cups (cup)' >Cups (cup)</option>\n                            <option value='Fluid Ounces (fl oz)' >Fluid Ounces (fl oz)</option>\n                            <option value='Liters (L)' >Liters (L)</option>\n                            <option value='Milliliters (ml)' >Milliliters (ml)</option>\n                        </optgroup>\n                        <optgroup label=\"Count\">\n                            <option value='Each (ea)' >Each (ea)</option>\n                            <option value='Pieces (pcs)' >Pieces (pcs)</option>\n                            <option value='Slices (slices)' >Slices (slices)</option>\n                            <option value='Dozen (dz)' >Dozen (dz)</option>\n                            <option value='Units (units)' >Units (units)</option>\n                        </optgroup>\n                        <optgroup label=\"Other\">\n                            <option value='Tablespoons (tbsp)' >Tablespoons (tbsp)</option>\n                            <option value='Teaspoons (tsp)' >Teaspoons (tsp)</option>\n                            <option value='Packets (packets)' >Packets (packets)</option>\n                        </optgroup>\n                      </CFormSelect>\n                    </CCol>\n                    <CCol>\n                    <CFormInput type=\"number\" id=\"serviceSizeWt\" label=\"Serving Size Weight (g)\" onChange={(e)=>{setServiceSizeWt(e.target.value)}} value={serviceSizeWt} name='serviceSizeWt' invalid={!!errors.serviceSizeWt} />\n                    </CCol>\n                    <CCol>\n                    <CFormSelect id=\"serviceSizeWtUOM\" label=\"Serving Size Weight UOM\" name='serviceSizeWtUOM' onChange={(e)=>{setServiceSizeWtUOM(e.target.value)}} value={serviceSizeWtUOM}  >\n                      <optgroup label=\"Weight\">\n                          <option value='Pounds (lbs)' >Pounds (lbs)</option>\n                          <option value='Ounces (oz)' >Ounces (oz)</option>\n                          <option value='Grams (g)' >Grams (g)</option>\n                          <option value='Kilograms (kg)' >Kilograms (kg)</option>\n                      </optgroup>\n                      <optgroup label=\"Volume\">\n                          <option value='Gallons (gal)' >Gallons (gal)</option>\n                          <option value='Quarts (qt)' >Quarts (qt)</option>\n                          <option value='Pints (pt)' >Pints (pt)</option>\n                          <option value='Cups (cup)' >Cups (cup)</option>\n                          <option value='Fluid Ounces (fl oz)' >Fluid Ounces (fl oz)</option>\n                          <option value='Liters (L)' >Liters (L)</option>\n                          <option value='Milliliters (ml)' >Milliliters (ml)</option>\n                      </optgroup>\n                      <optgroup label=\"Count\">\n                          <option value='Each (ea)' >Each (ea)</option>\n                          <option value='Pieces (pcs)' >Pieces (pcs)</option>\n                          <option value='Slices (slices)' >Slices (slices)</option>\n                          <option value='Dozen (dz)' >Dozen (dz)</option>\n                          <option value='Units (units)' >Units (units)</option>\n                      </optgroup>\n                      <optgroup label=\"Other\">\n                          <option value='Tablespoons (tbsp)' >Tablespoons (tbsp)</option>\n                          <option value='Teaspoons (tsp)' >Teaspoons (tsp)</option>\n                          <option value='Packets (packets)' >Packets (packets)</option>\n                      </optgroup>\n                    </CFormSelect>\n                    </CCol>\n                  </CRow>\n                    <CRow className='mb-4'>\n                      <CCol>\n                        <CFormSelect id=\"cnLabel\" label=\"C N Label\" name='cnLabel' onChange={(e)=>{setCnLabel(e.target.value)}} value={cnLabel} >\n                          <option value='Yes' >Yes</option>\n                          <option value='No' >No</option>\n                        </CFormSelect>\n                      </CCol>\n                    </CRow>\n              </CCardBody>\n              </CCard>\n              </CRow>\n              <CRow>\n                <CCard className=\"mb-4\">\n                  <CCardHeader>Visibility</CCardHeader>\n                  <CCardBody className=\"p-4\">\n                    <CRow className='mb-4'>\n                      <CCol>\n                        <CFormSelect id=\"isActive\" label=\"Published Product\" name='isActive' onChange={(e)=>{setIsActive(e.target.value)}} value={isActive} >\n                          <option value='true' >Published</option>\n                          <option value='false' >Unpublished</option>\n                        </CFormSelect>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n                </CCard>\n              </CRow>\n              {permission?\n              <CRow className='p-4'>\n              <CCol xs={12}>\n                  <CButton color=\"primary\" type=\"submit\" disabled={isSubmitting} className='float-end'>Update Product</CButton>\n                </CCol>\n              </CRow>:''}\n              </CForm>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default EditProduct\n","import React, { ChangeEventHandler, forwardRef, TextareaHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CFormControlWrapper, CFormControlWrapperProps } from './CFormControlWrapper'\n\nexport interface CFormTextareaProps\n  extends CFormControlWrapperProps,\n    TextareaHTMLAttributes<HTMLTextAreaElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * Method called immediately after the `value` prop changes.\n   */\n  onChange?: ChangeEventHandler<HTMLTextAreaElement>\n  /**\n   * Render the component styled as plain text. Removes the default form field styling and preserve the correct margin and padding. Recommend to use only along side `readonly`.\n   */\n  plainText?: boolean\n  /**\n   * Toggle the readonly state for the component.\n   */\n  readOnly?: boolean\n  /**\n   * The `value` attribute of component.\n   *\n   * @controllable onChange\n   * */\n  value?: string | string[] | number\n}\n\nexport const CFormTextarea = forwardRef<HTMLTextAreaElement, CFormTextareaProps>(\n  (\n    {\n      children,\n      className,\n      feedback,\n      feedbackInvalid,\n      feedbackValid,\n      floatingClassName,\n      floatingLabel,\n      id,\n      invalid,\n      label,\n      plainText,\n      text,\n      tooltipFeedback,\n      valid,\n      ...rest\n    },\n    ref,\n  ) => {\n    return (\n      <CFormControlWrapper\n        describedby={rest['aria-describedby']}\n        feedback={feedback}\n        feedbackInvalid={feedbackInvalid}\n        feedbackValid={feedbackValid}\n        floatingClassName={floatingClassName}\n        floatingLabel={floatingLabel}\n        id={id}\n        invalid={invalid}\n        label={label}\n        text={text}\n        tooltipFeedback={tooltipFeedback}\n        valid={valid}\n      >\n        <textarea\n          className={classNames(\n            plainText ? 'form-control-plaintext' : 'form-control',\n            {\n              'is-invalid': invalid,\n              'is-valid': valid,\n            },\n            className,\n          )}\n          id={id}\n          {...rest}\n          ref={ref}\n        >\n          {children}\n        </textarea>\n      </CFormControlWrapper>\n    )\n  },\n)\n\nCFormTextarea.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  plainText: PropTypes.bool,\n  ...CFormControlWrapper.propTypes,\n}\n\nCFormTextarea.displayName = 'CFormTextarea'\n"],"names":["EditProduct","_useLocation$state","_useLocation$state2","useNavigate","productId","useLocation","state","permission","manuDesc","setManuDesc","useState","distItemNum","setDistItemNum","name","setName","manuItemNum","setManuItemNum","productType","setProductType","caseDimeTitle","setCaseDimeTitle","caseDimeLength","setCaseDimeLength","caseDimeWidth","setCaseDimeWidth","caseDimeHeight","setCaseDimeHeight","servingSize","setServingSize","shelfLifeManu","setShelfLifeManu","storageMethod","setStorageMethod","tips","setTips","ingreList","setIngreList","servicePerCont","setServicePerCont","serviceSizeQty","setServiceSizeQty","serviceSizeWt","setServiceSizeWt","serviceSizeWtUOM","setServiceSizeWtUOM","shelfLife","setshelfLife","distributerIds","setDistributerIds","allergyFreeIds","setAllergyFreeIds","allergyContainIds","setAllergyContainIds","selectedDistributer","setSelectedDistributer","manuMarkStmt","setManuMarkStmt","caseCount","setCaseCount","masterPack","setMasterPack","grossCaseWeight","setGrossCaseWeight","masterUnitSize","setMasterUnitSize","gtinNum","setGtinNum","calories","setCalories","cholestrol","setCholestrol","totalFat","setTotalFat","saturatedFat","setSaturatedFat","transFat","setTransFat","sodium","setSodium","totalCarboht","setTotalCarboht","dietaryFiber","setDietaryFiber","totalSugar","setTotalSugar","addedSugar","setAddedSugar","protein","setProtein","vitD","setVitD","calcuim","setCalcuim","iron","setIron","potassium","setPotassium","casePack","setCasePack","caseBreakable","setCaseBreakable","brokenCase","setBrokenCase","netWeight","setNetWeight","unitMeasure","setUnitMeasure","cnLabel","setCnLabel","isActive","setIsActive","formData","setFormData","imageType","logo","logoFile","base64Image","isSubmitting","setIsSubmitting","clients","setClients","allergies","setAllergies","errors","setErrors","handleInputChange","async","index","event","value","files","target","updatedFormData","file","URL","createObjectURL","reader","FileReader","readAsDataURL","onloadend","result","useEffect","axios","get","headers","Authorization","concat","localStorage","getItem","then","response","formattedOptions","data","map","item","id","label","companyName","catch","error","console","productDetail","distributers","br","images","imageData","img","imgDetail","imagePath","process","push","calculateCasePack","calculateNetWeight","calculateCaseDime","_jsx","className","children","CContainer","_jsxs","CForm","onSubmit","e","preventDefault","productImages","image","payload","client","allergyContains","allergyFree","patch","r","toast","success","message","log","editProductAction","CRow","CCol","md","lg","xl","CCard","CCardHeader","CCardBody","CFormLabel","htmlFor","Select","options","isMulti","onChange","selectedOptions","placeholder","classNamePrefix","isClearable","closeMenuOnSelect","styles","control","provided","borderRadius","borderColor","menu","zIndex","CFormInput","type","CFormTextarea","CFormSelect","CImage","rounded","thumbnail","width","height","src","CButton","color","onClick","splice","handleRemoveForm","handleAddForm","locale","invalid","onMouseOver","CMultiSelect","ids","option","filter","includes","xs","disabled","forwardRef","_a","ref","feedback","feedbackInvalid","feedbackValid","floatingClassName","floatingLabel","plainText","text","tooltipFeedback","valid","rest","__rest","React","CFormControlWrapper","describedby","__assign","classNames","propTypes","PropTypes","displayName"],"sourceRoot":""}