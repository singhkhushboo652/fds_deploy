{"version":3,"file":"static/js/2538.ab682329.chunk.js","mappings":"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","sources":["../node_modules/@coreui/react-pro/src/components/widgets/CWidgetStatsB.tsx","../node_modules/@coreui/react-pro/src/components/widgets/CWidgetStatsE.tsx","../node_modules/@coreui/react-pro/src/components/widgets/CWidgetStatsF.tsx","../node_modules/@coreui/react-pro/src/components/widgets/CWidgetStatsC.tsx","../node_modules/@coreui/react-pro/src/components/widgets/CWidgetStatsD.tsx","views/widgets/WidgetsBrand.js","../node_modules/@coreui/react-pro/src/components/widgets/CWidgetStatsA.tsx","views/widgets/WidgetsDropdown.js","views/widgets/Widgets.js","../node_modules/@coreui/icons/src/brand/cib-facebook.ts","../node_modules/@coreui/icons/src/brand/cib-linkedin.ts","../node_modules/@coreui/icons/src/brand/cib-twitter.ts","../node_modules/@coreui/icons/src/free/cil-arrow-bottom.ts","../node_modules/@coreui/icons/src/free/cil-arrow-right.ts","../node_modules/@coreui/icons/src/free/cil-arrow-top.ts","../node_modules/@coreui/icons/src/free/cil-laptop.ts","../node_modules/@coreui/icons/src/free/cil-moon.ts","../node_modules/@coreui/icons/src/free/cil-options.ts","../node_modules/@coreui/icons/src/free/cil-people.ts","../node_modules/@coreui/react-pro/src/components/card/CCardFooter.tsx","../node_modules/@coreui/react-pro/src/components/card/CCardGroup.tsx","../node_modules/@coreui/react-pro/src/components/card/CCardHeader.tsx","../node_modules/@coreui/utils/src/getStyle.ts"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { CCard, CCardBody } from '../card'\nimport { CProgress, CProgressProps } from '../progress/CProgress'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CWidgetStatsBProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Colors have been inverted from their default dark shade.\n   */\n  inverse?: boolean\n  /**\n   * Sets the color context of the progress bar to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  progress?: CProgressProps\n  /**\n   * Title node for your component.\n   */\n  title?: string | ReactNode\n  /**\n   * Helper text for your component.\n   */\n  text?: string\n  /**\n   * Value node for your component.\n   */\n  value?: string | number | ReactNode\n}\n\nexport const CWidgetStatsB = forwardRef<HTMLDivElement, CWidgetStatsBProps>(\n  ({ className, color, inverse, progress, text, title, value, ...rest }, ref) => {\n    return (\n      <CCard\n        className={className}\n        color={color}\n        {...(inverse && { textColor: 'white' })}\n        {...rest}\n        ref={ref}\n      >\n        <CCardBody>\n          {value && <div className=\"fs-4 fw-semibold\">{value}</div>}\n          {title && <div>{title}</div>}\n          <CProgress className=\"my-2\" height={4} {...(inverse && { white: true })} {...progress} />\n          {text && (\n            <small className={inverse ? 'text-white text-opacity-75' : 'text-body-secondary'}>\n              {text}\n            </small>\n          )}\n        </CCardBody>\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsB.propTypes = {\n  className: PropTypes.string,\n  color: colorPropType,\n  inverse: PropTypes.bool,\n  progress: PropTypes.object,\n  text: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number]),\n}\n\nCWidgetStatsB.displayName = 'CWidgetCWidgetStatsB'\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCard, CCardBody } from '../card'\n\nexport interface CWidgetStatsEProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Chart node for your component.\n   */\n  chart?: string | ReactNode\n  /**\n   * Title node for your component.\n   */\n  title?: string | ReactNode\n  /**\n   * Value node for your component.\n   */\n  value?: string | number | ReactNode\n}\n\nexport const CWidgetStatsE = forwardRef<HTMLDivElement, CWidgetStatsEProps>(\n  ({ chart, className, title, value, ...rest }, ref) => {\n    return (\n      <CCard className={classNames(className)} {...rest} ref={ref}>\n        <CCardBody className=\"text-center\">\n          {title && (\n            <div className=\"text-body-secondary small text-uppercase fw-semibold\">{title}</div>\n          )}\n          {value && <div className=\"fs-6 fw-semibold py-3\">{value}</div>}\n          {chart}\n        </CCardBody>\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsE.propTypes = {\n  children: PropTypes.node,\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number]),\n}\n\nCWidgetStatsE.displayName = 'CWidgetStatsE'\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { CCard, CCardBody, CCardFooter } from '../card'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CWidgetStatsFProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Footer node for your component.\n   */\n  footer?: string | ReactNode\n  /**\n   * Icon node for your component.\n   */\n  icon?: string | ReactNode\n  /**\n   * Set padding of your component.\n   */\n  padding?: boolean\n  /**\n   * Title node for your component.\n   */\n  title?: string | ReactNode\n  /**\n   * Value node for your component.\n   */\n  value?: string | number | ReactNode\n}\n\nexport const CWidgetStatsF = forwardRef<HTMLDivElement, CWidgetStatsFProps>(\n  ({ className, color, footer, icon, padding = true, title, value, ...rest }, ref) => {\n    return (\n      <CCard className={className} {...rest} ref={ref}>\n        <CCardBody className={`d-flex align-items-center ${padding === false && 'p-0'}`}>\n          <div className={`me-3 text-white bg-${color} ${padding ? 'p-3' : 'p-4'}`}>{icon}</div>\n          <div>\n            <div className={`fs-6 fw-semibold text-${color}`}>{value}</div>\n            <div className=\"text-body-secondary text-uppercase fw-semibold small\">{title}</div>\n          </div>\n        </CCardBody>\n        {footer && <CCardFooter>{footer}</CCardFooter>}\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsF.propTypes = {\n  className: PropTypes.string,\n  color: colorPropType,\n  footer: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  padding: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number]),\n}\n\nCWidgetStatsF.displayName = 'CWidgetStatsF'\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { CCard, CCardBody } from '../card'\nimport { CProgress, CProgressProps } from '../progress/CProgress'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\nimport classNames from 'classnames'\n\nexport interface CWidgetStatsCProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Icon node for your component.\n   */\n  icon?: string | ReactNode\n  /**\n   * Colors have been inverted from their default dark shade.\n   */\n  inverse?: boolean\n  /**\n   * Sets the color context of the progress bar to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  progress?: CProgressProps\n  /**\n   * Title node for your component.\n   */\n  title?: string | ReactNode\n  /**\n   * Value node for your component.\n   */\n  value?: string | number | ReactNode\n}\n\nexport const CWidgetStatsC = forwardRef<HTMLDivElement, CWidgetStatsCProps>(\n  ({ className, color, icon, inverse, progress, title, value, ...rest }, ref) => {\n    return (\n      <CCard\n        className={className}\n        color={color}\n        {...(inverse && { textColor: 'white' })}\n        {...rest}\n        ref={ref}\n      >\n        <CCardBody>\n          {icon && (\n            <div\n              className={classNames(\n                'text-end mb-4',\n                inverse ? 'text-white text-opacity-75' : 'text-body-secondary',\n              )}\n            >\n              {icon}\n            </div>\n          )}\n          {value && <div className=\"fs-4 fw-semibold\">{value}</div>}\n          {title && (\n            <div className={inverse ? 'text-white text-opacity-75' : 'text-body-secondary'}>\n              {title}\n            </div>\n          )}\n          <CProgress\n            className=\"mt-3 mb-0\"\n            height={4}\n            {...(inverse && { white: true })}\n            {...progress}\n          />\n        </CCardBody>\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsC.propTypes = {\n  className: PropTypes.string,\n  color: colorPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  inverse: PropTypes.bool,\n  progress: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number]),\n}\n\nCWidgetStatsC.displayName = 'CWidgetStatsCWidgetStatsC'\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCard, CCardBody, CCardHeader } from '../card'\nimport { CCol } from '../grid/CCol'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\ntype Value = {\n  title?: string | ReactNode\n  value?: number | string | ReactNode\n}\n\nexport interface CWidgetStatsDProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Chart node for your component.\n   */\n  chart?: string | ReactNode\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Icon node for your component.\n   */\n  icon?: string | ReactNode\n  /**\n   * Values and titles for your component.\n   */\n  values?: Value[]\n}\n\nexport const CWidgetStatsD = forwardRef<HTMLDivElement, CWidgetStatsDProps>(\n  ({ className, chart, color, icon, values, ...rest }, ref) => {\n    return (\n      <CCard className={className} {...rest} ref={ref}>\n        <CCardHeader\n          className={classNames(\n            'position-relative d-flex justify-content-center align-items-center',\n            {\n              [`bg-${color}`]: color,\n            },\n          )}\n        >\n          {icon}\n          {chart}\n        </CCardHeader>\n        <CCardBody className=\"row text-center\">\n          {values &&\n            values.map((value: Value, index: number) => {\n              return (\n                <React.Fragment key={index}>\n                  {index % 2 !== 0 && <div className=\"vr\"></div>}\n                  <CCol>\n                    <div className=\"fs-5 fw-semibold\">{value.value}</div>\n                    <div className=\"text-uppercase text-body-secondary small\">{value.title}</div>\n                  </CCol>\n                </React.Fragment>\n              )\n            })}\n        </CCardBody>\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsD.propTypes = {\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  color: colorPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  values: PropTypes.arrayOf(PropTypes.any),\n}\n\nCWidgetStatsD.displayName = 'CWidgetStatsD'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTranslation } from 'react-i18next'\n\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = (props) => {\n  const { t } = useTranslation()\n\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow className={props.className} xs={{ gutter: 4 }}>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: t('friends'), value: '89K' },\n            { title: t('feeds'), value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: t('followers'), value: '973k' },\n            { title: t('tweets'), value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: t('contacts'), value: '500' },\n            { title: t('feeds'), value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          color=\"warning\"\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: t('events'), value: '12+' },\n            { title: t('meetings'), value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  className: PropTypes.string,\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCard, CCardBody } from '../card'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CWidgetStatsAProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * Action node for your component.\n   */\n  action?: ReactNode\n  /**\n   * Chart node for your component.\n   */\n  chart?: string | ReactNode\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Title node for your component.\n   */\n  title?: string | ReactNode\n  /**\n   * Value node for your component.\n   */\n  value?: string | number | ReactNode\n}\n\nexport const CWidgetStatsA = forwardRef<HTMLDivElement, CWidgetStatsAProps>(\n  ({ action, chart, className, color, title, value, ...rest }, ref) => {\n    return (\n      <CCard\n        className={classNames({ [`bg-${color}`]: color, 'text-white': color }, className)}\n        {...rest}\n        ref={ref}\n      >\n        <CCardBody className=\"pb-0 d-flex justify-content-between align-items-start\">\n          <div>\n            {value && <div className=\"fs-4 fw-semibold\">{value}</div>}\n            {title && <div>{title}</div>}\n          </div>\n          {action}\n        </CCardBody>\n        {chart}\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsA.propTypes = {\n  action: PropTypes.node,\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  color: colorPropType,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number]),\n}\n\nCWidgetStatsA.displayName = 'CWidgetStatsA'\n","import React, { useEffect, useRef } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport PropTypes from 'prop-types'\n\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react-pro'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = (props) => {\n  const { t } = useTranslation()\n  const widgetChartRef1 = useRef(null)\n  const widgetChartRef2 = useRef(null)\n\n  useEffect(() => {\n    document.documentElement.addEventListener('ColorSchemeChange', () => {\n      if (widgetChartRef1.current) {\n        setTimeout(() => {\n          widgetChartRef1.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-primary')\n          widgetChartRef1.current.update()\n        })\n      }\n\n      if (widgetChartRef2.current) {\n        setTimeout(() => {\n          widgetChartRef2.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-info')\n          widgetChartRef2.current.update()\n        })\n      }\n    })\n  }, [widgetChartRef1, widgetChartRef2])\n\n  return (\n    <CRow className={props.className} xs={{ gutter: 4 }}>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"primary-gradient\"\n          value={\n            <>\n              26K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title={t('users')}\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>{t('action')}</CDropdownItem>\n                <CDropdownItem>{t('anotherAction')}</CDropdownItem>\n                <CDropdownItem>{t('somethingElseHere')}</CDropdownItem>\n                <CDropdownItem disabled>{t('disabledAction')}</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              ref={widgetChartRef1}\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  t('january'),\n                  t('february'),\n                  t('march'),\n                  t('april'),\n                  t('may'),\n                  t('june'),\n                  t('july'),\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    border: {\n                      display: false,\n                    },\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"info-gradient\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title={t('income')}\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>{t('action')}</CDropdownItem>\n                <CDropdownItem>{t('anotherAction')}</CDropdownItem>\n                <CDropdownItem>{t('somethingElseHere')}</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              ref={widgetChartRef2}\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  t('january'),\n                  t('february'),\n                  t('march'),\n                  t('april'),\n                  t('may'),\n                  t('june'),\n                  t('july'),\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    border: {\n                      display: false,\n                    },\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"warning-gradient\"\n          value={\n            <>\n              2.49%{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title={t('conversionRate')}\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>{t('action')}</CDropdownItem>\n                <CDropdownItem>{t('anotherAction')}</CDropdownItem>\n                <CDropdownItem>{t('somethingElseHere')}</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  t('january'),\n                  t('february'),\n                  t('march'),\n                  t('april'),\n                  t('may'),\n                  t('june'),\n                  t('july'),\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"danger-gradient\"\n          value={\n            <>\n              44K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title={t('sessions')}\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>{t('action')}</CDropdownItem>\n                <CDropdownItem>{t('anotherAction')}</CDropdownItem>\n                <CDropdownItem>{t('somethingElseHere')}</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  t('january'),\n                  t('february'),\n                  t('march'),\n                  t('april'),\n                  t('may'),\n                  t('june'),\n                  t('july'),\n                  t('august'),\n                  t('september'),\n                  t('october'),\n                  t('november'),\n                  t('december'),\n                  t('january'),\n                  t('february'),\n                  t('march'),\n                  t('april'),\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    border: {\n                      display: false,\n                    },\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsDropdown.propTypes = {\n  className: PropTypes.string,\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsDropdown\n","import React from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCardHeader,\n  CCol,\n  CLink,\n  CRow,\n  CWidgetStatsB,\n  CWidgetStatsC,\n  CWidgetStatsE,\n  CWidgetStatsF,\n} from '@coreui/react-pro'\nimport { getStyle } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilArrowRight,\n  cilBasket,\n  cilBell,\n  cilChartPie,\n  cilMoon,\n  cilLaptop,\n  cilPeople,\n  cilSettings,\n  cilSpeech,\n  cilSpeedometer,\n  cilUser,\n  cilUserFollow,\n} from '@coreui/icons'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport { DocsExample } from 'src/components'\n\nimport WidgetsBrand from './WidgetsBrand'\nimport WidgetsDropdown from './WidgetsDropdown'\n\nconst Widgets = () => {\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  return (\n    <CCard className=\"mb-4\">\n      <CCardHeader>Widgets</CCardHeader>\n      <CCardBody>\n        <DocsExample href=\"components/widgets/#cwidgetstatsa\">\n          <WidgetsDropdown />\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatsb\">\n          <CRow xs={{ gutter: 4 }}>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsB\n                progress={{ color: 'success', value: 89.9 }}\n                text=\"Lorem ipsum dolor sit amet enim.\"\n                title=\"Widget title\"\n                value=\"89.9%\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsB\n                value=\"12.124\"\n                title=\"Widget title\"\n                progress={{ color: 'info', value: 89.9 }}\n                text=\"Lorem ipsum dolor sit amet enim.\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsB\n                value=\"$98.111,00\"\n                title=\"Widget title\"\n                progress={{ color: 'warning', value: 89.9 }}\n                text=\"Lorem ipsum dolor sit amet enim.\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsB\n                value=\"2 TB\"\n                title=\"Widget title\"\n                progress={{ color: 'primary', value: 89.9 }}\n                text=\"Lorem ipsum dolor sit amet enim.\"\n              />\n            </CCol>\n          </CRow>\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatsb\">\n          <CRow xs={{ gutter: 4 }}>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsB\n                color=\"success\"\n                inverse\n                value=\"89.9%\"\n                title=\"Widget title\"\n                progress={{ value: 89.9 }}\n                text=\"Lorem ipsum dolor sit amet enim.\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsB\n                color=\"info\"\n                inverse\n                value=\"12.124\"\n                title=\"Widget title\"\n                progress={{ value: 89.9 }}\n                text=\"Lorem ipsum dolor sit amet enim.\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsB\n                color=\"warning\"\n                inverse\n                value=\"$98.111,00\"\n                title=\"Widget title\"\n                progress={{ value: 89.9 }}\n                text=\"Lorem ipsum dolor sit amet enim.\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsB\n                color=\"primary\"\n                inverse\n                value=\"2 TB\"\n                title=\"Widget title\"\n                progress={{ value: 89.9 }}\n                text=\"Lorem ipsum dolor sit amet enim.\"\n              />\n            </CCol>\n          </CRow>\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatse\">\n          <CRow xs={{ gutter: 4 }}>\n            <CCol sm={4} lg={2}>\n              <CWidgetStatsE\n                chart={\n                  <CChartBar\n                    className=\"mx-auto\"\n                    style={{ height: '40px', width: '80px' }}\n                    data={{\n                      labels: [\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                      ],\n                      datasets: [\n                        {\n                          backgroundColor: getStyle('--cui-danger'),\n                          borderColor: 'transparent',\n                          borderWidth: 1,\n                          data: [\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                          ],\n                        },\n                      ],\n                    }}\n                    options={{\n                      maintainAspectRatio: false,\n                      plugins: {\n                        legend: {\n                          display: false,\n                        },\n                      },\n                      scales: {\n                        x: {\n                          display: false,\n                        },\n                        y: {\n                          display: false,\n                        },\n                      },\n                    }}\n                  />\n                }\n                title=\"title\"\n                value=\"1,123\"\n              />\n            </CCol>\n            <CCol sm={4} lg={2}>\n              <CWidgetStatsE\n                chart={\n                  <CChartBar\n                    className=\"mx-auto\"\n                    style={{ height: '40px', width: '80px' }}\n                    data={{\n                      labels: [\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                      ],\n                      datasets: [\n                        {\n                          backgroundColor: getStyle('--cui-primary'),\n                          borderColor: 'transparent',\n                          borderWidth: 1,\n                          data: [\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                          ],\n                        },\n                      ],\n                    }}\n                    options={{\n                      maintainAspectRatio: false,\n                      plugins: {\n                        legend: {\n                          display: false,\n                        },\n                      },\n                      scales: {\n                        x: {\n                          display: false,\n                        },\n                        y: {\n                          display: false,\n                        },\n                      },\n                    }}\n                  />\n                }\n                title=\"title\"\n                value=\"1,123\"\n              />\n            </CCol>\n            <CCol sm={4} lg={2}>\n              <CWidgetStatsE\n                chart={\n                  <CChartBar\n                    className=\"mx-auto\"\n                    style={{ height: '40px', width: '80px' }}\n                    data={{\n                      labels: [\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                      ],\n                      datasets: [\n                        {\n                          backgroundColor: getStyle('--cui-success'),\n                          borderColor: 'transparent',\n                          borderWidth: 1,\n                          data: [\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                          ],\n                        },\n                      ],\n                    }}\n                    options={{\n                      maintainAspectRatio: false,\n                      plugins: {\n                        legend: {\n                          display: false,\n                        },\n                      },\n                      scales: {\n                        x: {\n                          display: false,\n                        },\n                        y: {\n                          display: false,\n                        },\n                      },\n                    }}\n                  />\n                }\n                title=\"title\"\n                value=\"1,123\"\n              />\n            </CCol>\n            <CCol sm={4} lg={2}>\n              <CWidgetStatsE\n                chart={\n                  <CChartLine\n                    className=\"mx-auto\"\n                    style={{ height: '40px', width: '80px' }}\n                    data={{\n                      labels: [\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                      ],\n                      datasets: [\n                        {\n                          backgroundColor: 'transparent',\n                          borderColor: getStyle('--cui-danger'),\n                          borderWidth: 2,\n                          data: [\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                          ],\n                        },\n                      ],\n                    }}\n                    options={{\n                      maintainAspectRatio: false,\n                      elements: {\n                        line: {\n                          tension: 0.4,\n                        },\n                        point: {\n                          radius: 0,\n                        },\n                      },\n                      plugins: {\n                        legend: {\n                          display: false,\n                        },\n                      },\n                      scales: {\n                        x: {\n                          display: false,\n                        },\n                        y: {\n                          display: false,\n                        },\n                      },\n                    }}\n                  />\n                }\n                title=\"title\"\n                value=\"1,123\"\n              />\n            </CCol>\n            <CCol sm={4} lg={2}>\n              <CWidgetStatsE\n                chart={\n                  <CChartLine\n                    className=\"mx-auto\"\n                    style={{ height: '40px', width: '80px' }}\n                    data={{\n                      labels: [\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                      ],\n                      datasets: [\n                        {\n                          backgroundColor: 'transparent',\n                          borderColor: getStyle('--cui-success'),\n                          borderWidth: 2,\n                          data: [\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                          ],\n                        },\n                      ],\n                    }}\n                    options={{\n                      maintainAspectRatio: false,\n                      elements: {\n                        line: {\n                          tension: 0.4,\n                        },\n                        point: {\n                          radius: 0,\n                        },\n                      },\n                      plugins: {\n                        legend: {\n                          display: false,\n                        },\n                      },\n                      scales: {\n                        x: {\n                          display: false,\n                        },\n                        y: {\n                          display: false,\n                        },\n                      },\n                    }}\n                  />\n                }\n                title=\"title\"\n                value=\"1,123\"\n              />\n            </CCol>\n            <CCol sm={4} lg={2}>\n              <CWidgetStatsE\n                chart={\n                  <CChartLine\n                    className=\"mx-auto\"\n                    style={{ height: '40px', width: '80px' }}\n                    data={{\n                      labels: [\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                        'T',\n                        'W',\n                        'T',\n                        'F',\n                        'S',\n                        'S',\n                        'M',\n                      ],\n                      datasets: [\n                        {\n                          backgroundColor: 'transparent',\n                          borderColor: getStyle('--cui-info'),\n                          borderWidth: 2,\n                          data: [\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                            random(40, 100),\n                          ],\n                        },\n                      ],\n                    }}\n                    options={{\n                      maintainAspectRatio: false,\n                      elements: {\n                        line: {\n                          tension: 0.4,\n                        },\n                        point: {\n                          radius: 0,\n                        },\n                      },\n                      plugins: {\n                        legend: {\n                          display: false,\n                        },\n                      },\n                      scales: {\n                        x: {\n                          display: false,\n                        },\n                        y: {\n                          display: false,\n                        },\n                      },\n                    }}\n                  />\n                }\n                title=\"title\"\n                value=\"1,123\"\n              />\n            </CCol>\n          </CRow>\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatsf\">\n          <CRow xs={{ gutter: 4 }}>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilSettings} size=\"xl\" />}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"primary\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilUser} size=\"xl\" />}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"info\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilMoon} size=\"xl\" />}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"warning\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilBell} size=\"xl\" />}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"danger\"\n              />\n            </CCol>\n          </CRow>\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatsf\">\n          <CRow xs={{ gutter: 4 }}>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilSettings} size=\"xl\" />}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"primary\"\n                footer={\n                  <CLink\n                    className=\"fw-semibold font-xs text-body-secondary\"\n                    href=\"https://coreui.io/\"\n                    rel=\"noopener norefferer\"\n                    target=\"_blank\"\n                  >\n                    View more\n                    <CIcon icon={cilArrowRight} className=\"float-end\" width={16} />\n                  </CLink>\n                }\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilLaptop} size=\"xl\" />}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"info\"\n                footer={\n                  <CLink\n                    className=\"fw-semibold font-xs text-body-secondary\"\n                    href=\"https://coreui.io/\"\n                    rel=\"noopener norefferer\"\n                    target=\"_blank\"\n                  >\n                    View more\n                    <CIcon icon={cilArrowRight} className=\"float-end\" width={16} />\n                  </CLink>\n                }\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilMoon} size=\"xl\" />}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"warning\"\n                footer={\n                  <CLink\n                    className=\"fw-semibold font-xs text-body-secondary\"\n                    href=\"https://coreui.io/\"\n                    rel=\"noopener norefferer\"\n                    target=\"_blank\"\n                  >\n                    View more\n                    <CIcon icon={cilArrowRight} className=\"float-end\" width={16} />\n                  </CLink>\n                }\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilBell} size=\"xl\" />}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"danger\"\n                footer={\n                  <CLink\n                    className=\"fw-semibold font-xs text-body-secondary\"\n                    href=\"https://coreui.io/\"\n                    rel=\"noopener norefferer\"\n                    target=\"_blank\"\n                  >\n                    View more\n                    <CIcon icon={cilArrowRight} className=\"float-end\" width={16} />\n                  </CLink>\n                }\n              />\n            </CCol>\n          </CRow>\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatsf\">\n          <CRow xs={{ gutter: 4 }}>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilSettings} size=\"xl\" />}\n                padding={false}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"primary\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilUser} size=\"xl\" />}\n                padding={false}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"info\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilMoon} size=\"xl\" />}\n                padding={false}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"warning\"\n              />\n            </CCol>\n            <CCol xs={12} sm={6} xl={4} xxl={3}>\n              <CWidgetStatsF\n                icon={<CIcon width={24} icon={cilBell} size=\"xl\" />}\n                padding={false}\n                title=\"income\"\n                value=\"$1.999,50\"\n                color=\"danger\"\n              />\n            </CCol>\n          </CRow>\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatsd\">\n          <WidgetsBrand />\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatsd\">\n          <WidgetsBrand withCharts />\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatsc\">\n          <CCardGroup className=\"mb-4\">\n            <CWidgetStatsC\n              icon={<CIcon icon={cilPeople} height={36} />}\n              value=\"87.500\"\n              title=\"Visitors\"\n              progress={{ color: 'info', value: 75 }}\n            />\n            <CWidgetStatsC\n              icon={<CIcon icon={cilUserFollow} height={36} />}\n              value=\"385\"\n              title=\"New Clients\"\n              progress={{ color: 'success', value: 75 }}\n            />\n            <CWidgetStatsC\n              icon={<CIcon icon={cilBasket} height={36} />}\n              value=\"1238\"\n              title=\"Products sold\"\n              progress={{ color: 'warning', value: 75 }}\n            />\n            <CWidgetStatsC\n              icon={<CIcon icon={cilChartPie} height={36} />}\n              value=\"28%\"\n              title=\"Returning Visitors\"\n              progress={{ color: 'primary', value: 75 }}\n            />\n            <CWidgetStatsC\n              icon={<CIcon icon={cilSpeedometer} height={36} />}\n              value=\"5:34:11\"\n              title=\"Avg. Time\"\n              progress={{ color: 'danger', value: 75 }}\n            />\n          </CCardGroup>\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatsc\">\n          <CRow xs={{ gutter: 4 }}>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                icon={<CIcon icon={cilPeople} height={36} />}\n                value=\"87.500\"\n                title=\"Visitors\"\n                progress={{ color: 'info', value: 75 }}\n              />\n            </CCol>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                icon={<CIcon icon={cilUserFollow} height={36} />}\n                value=\"385\"\n                title=\"New Clients\"\n                progress={{ color: 'success', value: 75 }}\n              />\n            </CCol>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                icon={<CIcon icon={cilBasket} height={36} />}\n                value=\"1238\"\n                title=\"Products sold\"\n                progress={{ color: 'warning', value: 75 }}\n              />\n            </CCol>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                icon={<CIcon icon={cilChartPie} height={36} />}\n                value=\"28%\"\n                title=\"Returning Visitors\"\n                progress={{ color: 'primary', value: 75 }}\n              />\n            </CCol>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                icon={<CIcon icon={cilSpeedometer} height={36} />}\n                value=\"5:34:11\"\n                title=\"Avg. Time\"\n                progress={{ color: 'danger', value: 75 }}\n              />\n            </CCol>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                icon={<CIcon icon={cilSpeech} height={36} />}\n                value=\"972\"\n                title=\"Comments\"\n                progress={{ color: 'info', value: 75 }}\n              />\n            </CCol>\n          </CRow>\n        </DocsExample>\n        <DocsExample href=\"components/widgets/#cwidgetstatsc\">\n          <CRow xs={{ gutter: 4 }}>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                color=\"info\"\n                icon={<CIcon icon={cilPeople} height={36} />}\n                value=\"87.500\"\n                title=\"Visitors\"\n                inverse\n                progress={{ value: 75 }}\n              />\n            </CCol>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                color=\"success\"\n                icon={<CIcon icon={cilUserFollow} height={36} />}\n                value=\"385\"\n                title=\"New Clients\"\n                inverse\n                progress={{ value: 75 }}\n              />\n            </CCol>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                color=\"warning\"\n                icon={<CIcon icon={cilBasket} height={36} />}\n                value=\"1238\"\n                title=\"Products sold\"\n                inverse\n                progress={{ value: 75 }}\n              />\n            </CCol>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                color=\"primary\"\n                icon={<CIcon icon={cilChartPie} height={36} />}\n                value=\"28%\"\n                title=\"Returning Visitors\"\n                inverse\n                progress={{ value: 75 }}\n              />\n            </CCol>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                color=\"danger\"\n                icon={<CIcon icon={cilSpeedometer} height={36} />}\n                value=\"5:34:11\"\n                title=\"Avg. Time\"\n                inverse\n                progress={{ value: 75 }}\n              />\n            </CCol>\n            <CCol xs={6} lg={4} xl={4} xxl={2}>\n              <CWidgetStatsC\n                color=\"info\"\n                icon={<CIcon icon={cilSpeech} height={36} />}\n                value=\"972\"\n                title=\"Comments\"\n                inverse\n                progress={{ value: 75 }}\n              />\n            </CCol>\n          </CRow>\n        </DocsExample>\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default Widgets\n","export var cibFacebook = [\"32 32\", \"<path d='M32 16c0-8.839-7.167-16-16-16-8.839 0-16 7.161-16 16 0 7.984 5.849 14.604 13.5 15.803v-11.177h-4.063v-4.625h4.063v-3.527c0-4.009 2.385-6.223 6.041-6.223 1.751 0 3.584 0.312 3.584 0.312v3.937h-2.021c-1.984 0-2.604 1.235-2.604 2.5v3h4.437l-0.713 4.625h-3.724v11.177c7.645-1.199 13.5-7.819 13.5-15.803z'/>\"];\n","export var cibLinkedin = [\"32 32\", \"<path d='M27.26 27.271h-4.733v-7.427c0-1.771-0.037-4.047-2.475-4.047-2.468 0-2.844 1.921-2.844 3.916v7.557h-4.739v-15.271h4.552v2.083h0.061c0.636-1.203 2.183-2.468 4.491-2.468 4.801 0 5.692 3.161 5.692 7.271v8.385zM7.115 9.912c-1.527 0-2.751-1.235-2.751-2.756 0-1.516 1.229-2.749 2.751-2.749s2.755 1.233 2.755 2.749c0 1.521-1.233 2.756-2.755 2.756zM9.489 27.271h-4.749v-15.271h4.749zM29.636 0h-27.276c-1.303 0-2.36 1.031-2.36 2.307v27.387c0 1.276 1.057 2.307 2.36 2.307h27.271c1.301 0 2.369-1.031 2.369-2.307v-27.387c0-1.276-1.068-2.307-2.369-2.307z'/>\"];\n","export var cibTwitter = [\"32 32\", \"<path d='M31.937 6.093c-1.177 0.516-2.437 0.871-3.765 1.032 1.355-0.813 2.391-2.099 2.885-3.631-1.271 0.74-2.677 1.276-4.172 1.579-1.192-1.276-2.896-2.079-4.787-2.079-3.625 0-6.563 2.937-6.563 6.557 0 0.521 0.063 1.021 0.172 1.495-5.453-0.255-10.287-2.875-13.52-6.833-0.568 0.964-0.891 2.084-0.891 3.303 0 2.281 1.161 4.281 2.916 5.457-1.073-0.031-2.083-0.328-2.968-0.817v0.079c0 3.181 2.26 5.833 5.26 6.437-0.547 0.145-1.131 0.229-1.724 0.229-0.421 0-0.823-0.041-1.224-0.115 0.844 2.604 3.26 4.5 6.14 4.557-2.239 1.755-5.077 2.801-8.135 2.801-0.521 0-1.041-0.025-1.563-0.088 2.917 1.86 6.36 2.948 10.079 2.948 12.067 0 18.661-9.995 18.661-18.651 0-0.276 0-0.557-0.021-0.839 1.287-0.917 2.401-2.079 3.281-3.396z'/>\"];\n","export var cilArrowBottom = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='367.997 338.75 271.999 434.747 271.999 17.503 239.999 17.503 239.999 434.745 144.003 338.75 121.376 361.377 256 496 390.624 361.377 367.997 338.75' class='ci-primary'/>\"];\n","export var cilArrowRight = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='359.873 121.377 337.246 144.004 433.243 240.001 16 240.001 16 240.002 16 272.001 16 272.002 433.24 272.002 337.246 367.996 359.873 390.623 494.498 256 359.873 121.377' class='ci-primary'/>\"];\n","export var cilArrowTop = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='390.624 150.625 256 16 121.376 150.625 144.004 173.252 240.001 77.254 240.001 495.236 272.001 495.236 272.001 77.257 367.996 173.252 390.624 150.625' class='ci-primary'/>\"];\n","export var cilLaptop = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M440,368a24.028,24.028,0,0,0,24-24V104a24.028,24.028,0,0,0-24-24H72a24.028,24.028,0,0,0-24,24V344a24.028,24.028,0,0,0,24,24ZM80,112H432V336H80Z' class='ci-primary'/><rect width='480' height='32' x='16' y='400' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/>\"];\n","export var cilMoon = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M268.279,496c-67.574,0-130.978-26.191-178.534-73.745S16,311.293,16,243.718A252.252,252.252,0,0,1,154.183,18.676a24.44,24.44,0,0,1,34.46,28.958,220.12,220.12,0,0,0,54.8,220.923A218.746,218.746,0,0,0,399.085,333.2h0a220.2,220.2,0,0,0,65.277-9.846,24.439,24.439,0,0,1,28.959,34.461A252.256,252.256,0,0,1,268.279,496ZM153.31,55.781A219.3,219.3,0,0,0,48,243.718C48,365.181,146.816,464,268.279,464a219.3,219.3,0,0,0,187.938-105.31,252.912,252.912,0,0,1-57.13,6.513h0a250.539,250.539,0,0,1-178.268-74.016,252.147,252.147,0,0,1-67.509-235.4Z' class='ci-primary'/>\"];\n","export var cilOptions = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M256,144a64,64,0,1,0-64-64A64.072,64.072,0,0,0,256,144Zm0-96a32,32,0,1,1-32,32A32.036,32.036,0,0,1,256,48Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,368a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,368Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,464Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,192a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,192Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,288Z' class='ci-primary'/>\"];\n","export var cilPeople = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M462.541,316.3l-64.344-42.1,24.774-45.418A79.124,79.124,0,0,0,432.093,192V120A103.941,103.941,0,0,0,257.484,43.523L279.232,67a71.989,71.989,0,0,1,120.861,53v72a46.809,46.809,0,0,1-5.215,21.452L355.962,284.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421V432h-72v32h104V378.494A74.061,74.061,0,0,0,462.541,316.3Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M318.541,348.3l-64.343-42.1,24.773-45.418A79.124,79.124,0,0,0,288.093,224V152A104.212,104.212,0,0,0,184.04,47.866C126.723,47.866,80.093,94.581,80.093,152v72a78,78,0,0,0,9.015,36.775l24.908,45.664L50.047,348.3A74.022,74.022,0,0,0,16.5,410.4L16,496H352.093V410.494A74.061,74.061,0,0,0,318.541,348.3ZM320.093,464H48.186l.31-53.506a42.158,42.158,0,0,1,19.073-35.421l88.682-58.029L117.2,245.452A46.838,46.838,0,0,1,112.093,224V152a72,72,0,1,1,144,0v72a46.809,46.809,0,0,1-5.215,21.452L211.962,316.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421Z' class='ci-primary'/>\"];\n","import PropTypes from 'prop-types'\nimport React, { forwardRef, HTMLAttributes } from 'react'\nimport classNames from 'classnames'\n\nexport interface CCardFooterProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardFooter = forwardRef<HTMLDivElement, CCardFooterProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('card-footer', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCCardFooter.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardFooter.displayName = 'CCardFooter'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CCardGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardGroup = forwardRef<HTMLDivElement, CCardGroupProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('card-group', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCCardGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardGroup.displayName = 'CCardGroup'\n","import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CCardHeaderProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardHeader: PolymorphicRefForwardingComponent<'div', CCardHeaderProps> = forwardRef<\n  HTMLDivElement,\n  CCardHeaderProps\n>(({ children, as: Component = 'div', className, ...rest }, ref) => {\n  return (\n    <Component className={classNames('card-header', className)} {...rest} ref={ref}>\n      {children}\n    </Component>\n  )\n})\n\nCCardHeader.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardHeader.displayName = 'CCardHeader'\n","/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (__COREUI_VERSION__): getStyle.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst getStyle = (property: string, element?: Element) => {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  if (typeof document === 'undefined') {\n    return\n  }\n\n  const _element = element ?? document.body\n\n  return window.getComputedStyle(_element, null).getPropertyValue(property).replace(/^\\s/, '')\n}\n\nexport default getStyle\n"],"names":["CWidgetStatsB","forwardRef","_a","ref","className","color","inverse","progress","text","title","value","rest","__rest","React","CCard","__assign","textColor","CCardBody","CProgress","height","white","propTypes","PropTypes","colorPropType","displayName","CWidgetStatsE","chart","classNames","children","CWidgetStatsF","footer","icon","_b","padding","concat","CCardFooter","CWidgetStatsC","CWidgetStatsD","values","CCardHeader","map","index","key","CCol","props","t","useTranslation","chartOptions","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","maintainAspectRatio","plugins","legend","display","scales","x","y","_jsxs","CRow","xs","gutter","_jsx","sm","xl","xxl","withCharts","CChart","type","data","labels","datasets","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","CIcon","cibFacebook","style","cibTwitter","cibLinkedin","cilCalendar","CWidgetStatsA","action","widgetChartRef1","useRef","widgetChartRef2","useEffect","document","documentElement","addEventListener","current","setTimeout","pointBackgroundColor","getStyle","update","_Fragment","cilArrowBottom","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","CChartLine","label","border","grid","ticks","min","max","cilArrowTop","CChartBar","barPercentage","drawTicks","Widgets","random","Math","floor","DocsExample","href","WidgetsDropdown","lg","width","cilSettings","size","cilUser","cilMoon","cilBell","CLink","rel","target","cilArrowRight","cilLaptop","WidgetsBrand","CCardGroup","cilPeople","cilUserFollow","cilBasket","cilChartPie","cilSpeedometer","cilSpeech","as","Component","property","element","window","_element","body","getComputedStyle","getPropertyValue","replace"],"sourceRoot":""}