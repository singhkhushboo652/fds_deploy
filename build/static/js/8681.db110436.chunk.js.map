{"version":3,"file":"static/js/8681.db110436.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js","../node_modules/@coreui/icons/src/brand/cib-facebook.ts","../node_modules/@coreui/icons/src/brand/cib-linkedin.ts","../node_modules/@coreui/icons/src/brand/cib-twitter.ts","../node_modules/@coreui/icons/src/free/cil-arrow-bottom.ts","../node_modules/@coreui/icons/src/free/cil-arrow-top.ts","../node_modules/@coreui/icons/src/free/cil-cart.ts","../node_modules/@coreui/icons/src/free/cil-people.ts","../node_modules/@coreui/icons/src/free/cil-user-female.ts","../node_modules/@coreui/react-pro/src/components/card/CCardTitle.tsx","../node_modules/@coreui/utils/src/getStyle.ts"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate } from 'react-router-dom'\n\nimport {\n  CAvatar,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardSubtitle,\n  CCardTitle,\n  CCol,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CWidgetStatsA,\n} from '@coreui/react-pro'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport { getStyle } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n  cilArrowBottom,\n  cilCart,\n  cilArrowTop,\n  cilUserPlus,\n  cilOptions,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nconst Dashboard = () => {\n  const navigate = useNavigate()\n  const { t } = useTranslation()\n  const chartBartRef = useRef(null)\n  const chartLineRef = useRef(null)\n\n  const mainChartLabel = (date) => {\n    return t('date', {\n      date,\n      formatParams: { date: { month: 'short' } },\n    })\n  }\n\n  useEffect(()=>{\n    if(localStorage.getItem('token') == \"\" || localStorage.getItem('token') == null){\n        navigate(\"/login\");\n    }\n},[])\n\n  useEffect(() => {\n    document.documentElement.addEventListener('ColorSchemeChange', () => {\n      if (chartBartRef.current) {\n        setTimeout(() => {\n          chartBartRef.current.options.scales.x.grid.color = getStyle(\n            '--cui-border-color-translucent',\n          )\n          chartBartRef.current.options.scales.x.ticks.color = getStyle('--cui-body-color')\n          chartBartRef.current.options.scales.y.grid.color = getStyle(\n            '--cui-border-color-translucent',\n          )\n          chartBartRef.current.options.scales.y.ticks.color = getStyle('--cui-body-color')\n          chartBartRef.current.update()\n        })\n      }\n\n      if (chartLineRef.current) {\n        setTimeout(() => {\n          chartLineRef.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-primary')\n          chartLineRef.current.update()\n        })\n      }\n    })\n  }, [chartBartRef, chartLineRef])\n\n  const progressGroupExample1 = [\n    { title: t('monday'), value1: 34, value2: 78 },\n    { title: t('tuesday'), value1: 56, value2: 94 },\n    { title: t('wednesday'), value1: 12, value2: 67 },\n    { title: t('thursday'), value1: 43, value2: 91 },\n    { title: t('friday'), value1: 22, value2: 73 },\n    { title: t('saturday'), value1: 53, value2: 82 },\n    { title: t('sunday'), value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: t('male'), icon: cilUser, value: 53 },\n    { title: t('female'), icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: t('organicSearch'), icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExampleUsagePeriod = (dateStart, dateEnd) => {\n    const formatParams = { date: { year: 'numeric', month: 'short', day: 'numeric' } }\n    return `${t('date', {\n      date: dateStart,\n      formatParams,\n    })} - ${t('date', {\n      date: dateEnd,\n      formatParams,\n    })}`\n  }\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: t('date', {\n          date: new Date(2023, 0, 10),\n          formatParams: { date: { year: 'numeric', month: 'short', day: 'numeric' } },\n        }),\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: tableExampleUsagePeriod(new Date(2023, 5, 11), new Date(2023, 6, 10)),\n        color: 'success',\n      },\n      activity: t('relativeTime', { val: -10, range: 'seconds' }),\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: t('date', {\n          date: new Date(2023, 0, 10),\n          formatParams: { date: { year: 'numeric', month: 'short', day: 'numeric' } },\n        }),\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: tableExampleUsagePeriod(new Date(2023, 5, 11), new Date(2023, 6, 10)),\n        color: 'info',\n      },\n      activity: t('relativeTime', { val: -5, range: 'minutes' }),\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: {\n        name: 'Quintin Ed',\n        new: true,\n        registered: t('date', {\n          date: new Date(2023, 0, 10),\n          formatParams: { date: { year: 'numeric', month: 'short', day: 'numeric' } },\n        }),\n      },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: tableExampleUsagePeriod(new Date(2023, 5, 11), new Date(2023, 6, 10)),\n        color: 'warning',\n      },\n      activity: t('relativeTime', { val: -1, range: 'hours' }),\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: {\n        name: 'Enéas Kwadwo',\n        new: true,\n        registered: t('date', {\n          date: new Date(2023, 0, 10),\n          formatParams: { date: { year: 'numeric', month: 'short', day: 'numeric' } },\n        }),\n      },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: tableExampleUsagePeriod(new Date(2023, 5, 11), new Date(2023, 6, 10)),\n        color: 'danger',\n      },\n      activity: t('relativeTime', { val: -1, range: 'weeks' }),\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: t('date', {\n          date: new Date(2023, 0, 10),\n          formatParams: { date: { year: 'numeric', month: 'short', day: 'numeric' } },\n        }),\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: tableExampleUsagePeriod(new Date(2023, 5, 11), new Date(2023, 6, 10)),\n        color: 'primary',\n      },\n      activity: t('relativeTime', { val: -3, range: 'months' }),\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: t('date', {\n          date: new Date(2023, 0, 10),\n          formatParams: { date: { year: 'numeric', month: 'short', day: 'numeric' } },\n        }),\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: tableExampleUsagePeriod(new Date(2023, 5, 11), new Date(2023, 6, 10)),\n        color: 'success',\n      },\n      activity: t('relativeTime', { val: -1, range: 'years' }),\n    },\n  ]\n\n  return (\n    <>\n      <CRow>\n        <CCol xl={8}>\n          <CRow>\n            {/*\n            <CCol lg={12}>\n              <CCard className=\"overflow-hidden mb-4\">\n                <CCardBody className=\"p-4\">\n                  <CRow>\n                    <CCol>\n                      <CCardTitle className=\"fs-4 fw-semibold\">{t('sale')}</CCardTitle>\n                    </CCol>\n                    <CCol className=\"text-end text-primary fs-4 fw-semibold\">$613.200</CCol>\n                  </CRow>\n                  <CCardSubtitle className=\"fw-normal text-body-secondary\">\n                    {t('date', {\n                      date: new Date(2023, 0, 1),\n                      formatParams: {\n                        date: {\n                          month: 'long',\n                        },\n                      },\n                    })}{' '}\n                    -{' '}\n                    {t('date', {\n                      date: new Date(2023, 6, 1),\n                      formatParams: {\n                        date: {\n                          year: 'numeric',\n                          month: 'long',\n                        },\n                      },\n                    })}\n                  </CCardSubtitle>\n                </CCardBody>\n                <CChartLine\n                  className=\"mt-3\"\n                  style={{ height: '150px' }}\n                  data={{\n                    labels: [\n                      t('january'),\n                      t('february'),\n                      t('march'),\n                      t('april'),\n                      t('may'),\n                      t('june'),\n                      t('july'),\n                    ],\n                    datasets: [\n                      {\n                        label: 'My First dataset',\n                        backgroundColor: `rgba(${getStyle('--cui-primary-rgb')}, .1)`,\n                        borderColor: getStyle('--cui-primary'),\n                        borderWidth: 3,\n                        data: [78, 81, 80, 45, 34, 22, 40],\n                        fill: true,\n                      },\n                    ],\n                  }}\n                  options={{\n                    plugins: {\n                      legend: {\n                        display: false,\n                      },\n                    },\n                    maintainAspectRatio: false,\n                    scales: {\n                      x: {\n                        display: false,\n                      },\n                      y: {\n                        beginAtZero: true,\n                        display: false,\n                      },\n                    },\n                    elements: {\n                      line: {\n                        borderWidth: 2,\n                        tension: 0.4,\n                      },\n                      point: {\n                        radius: 0,\n                        hitRadius: 10,\n                        hoverRadius: 4,\n                      },\n                    },\n                  }}\n                />\n              </CCard>\n            </CCol> */}\n            <CCol sm={6}>\n              <CCard className=\"mb-4\">\n                <CCardBody>\n                  <div className=\"d-flex justify-content-between\">\n                    <CCardTitle as=\"h6\" className=\"text-body-secondary text-truncate\">\n                      {t('customers')}\n                    </CCardTitle>\n                    <div className=\"bg-primary bg-opacity-25 text-primary rounded p-2 ms-2\">\n                      <CIcon icon={cilPeople} size=\"xl\" />\n                    </div>\n                  </div>\n                  <div className=\"fs-4 fw-semibold pb-3\">44.725</div>\n                  <small className=\"text-danger\">\n                    (-12.4% <CIcon icon={cilArrowBottom} />)\n                  </small>\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol sm={6}>\n              <CCard className=\"mb-4\">\n                <CCardBody>\n                  <div className=\"d-flex justify-content-between\">\n                    <CCardTitle as=\"h6\" className=\"text-body-secondary text-truncate\">\n                      {t('products')}\n                    </CCardTitle>\n                    <div className=\"bg-primary bg-opacity-25 text-primary rounded p-2 ms-2\">\n                      <CIcon icon={cilCart} size=\"xl\" />\n                    </div>\n                  </div>\n                  <div className=\"fs-4 fw-semibold pb-3\">385</div>\n                  <small className=\"text-success\">\n                    (17.2% <CIcon icon={cilArrowTop} />)\n                  </small>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        </CCol>\n        {/* <CCol xl={8}>\n          <CCard className=\"mb-4\">\n            <CCardBody className=\"p-4\">\n              <CCardTitle className=\"fs-4 fw-semibold\">{t('traffic')}</CCardTitle>\n              <CCardSubtitle\n                className=\"fw-normal text-body-secondary\"\n                style={{ marginBottom: '40px' }}\n              >\n                {t('date', {\n                  date: new Date(2022, 0, 1),\n                  formatParams: {\n                    date: { year: 'numeric', month: 'long', day: 'numeric' },\n                  },\n                })}{' '}\n                -{' '}\n                {t('date', {\n                  date: new Date(2022, 11, 31),\n                  formatParams: {\n                    date: { year: 'numeric', month: 'long', day: 'numeric' },\n                  },\n                })}\n              </CCardSubtitle>\n              <CChartBar\n                ref={chartBartRef}\n                data={{\n                  labels: [\n                    mainChartLabel(new Date(Date.UTC(2022, 0, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 1, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 2, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 3, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 4, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 5, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 6, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 7, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 8, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 9, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 10, 1))),\n                    mainChartLabel(new Date(Date.UTC(2022, 11, 1))),\n                  ],\n                  datasets: [\n                    {\n                      label: 'Users',\n                      backgroundColor: getStyle('--cui-primary'),\n                      borderRadius: 6,\n                      borderSkipped: false,\n                      data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                      barPercentage: 0.6,\n                      categoryPercentage: 0.5,\n                    },\n                    {\n                      label: 'New users',\n                      backgroundColor: getStyle('--cui-gray-200'),\n                      borderRadius: 6,\n                      borderSkipped: false,\n                      data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                      barPercentage: 0.6,\n                      categoryPercentage: 0.5,\n                    },\n                  ],\n                }}\n                options={{\n                  maintainAspectRatio: false,\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  scales: {\n                    x: {\n                      border: {\n                        display: false,\n                      },\n                      grid: {\n                        color: getStyle('--cui-border-color-translucent'),\n                        display: false,\n                        drawTicks: false,\n                      },\n                      ticks: {\n                        color: getStyle('--cui-body-color'),\n                        font: {\n                          size: 14,\n                        },\n                        padding: 16,\n                      },\n                    },\n                    y: {\n                      beginAtZero: true,\n                      border: {\n                        dash: [2, 4],\n                        display: false,\n                      },\n                      grid: {\n                        color: getStyle('--cui-border-color-translucent'),\n                      },\n                      ticks: {\n                        color: getStyle('--cui-body-color'),\n                        font: {\n                          size: 14,\n                        },\n                        maxTicksLimit: 5,\n                        padding: 16,\n                        stepSize: Math.ceil(100 / 4),\n                      },\n                    },\n                  },\n                }}\n                style={{ height: '300px' }}\n              />\n            </CCardBody>\n          </CCard>\n              </CCol> */}\n      </CRow>\n      {/* <CRow>\n        <CCol xl={12}>\n          <CCard className=\"mb-4\">\n            <CCardBody className=\"p-4\">\n              <CRow>\n                <CCol>\n                  <CCardTitle className=\"fs-4 fw-semibold\">{t('users')}</CCardTitle>\n                  <CCardSubtitle className=\"fw-normal text-body-secondary mb-4\">\n                    {t('recent registered users', {\n                      counter: '1.232.15',\n                    })}\n                  </CCardSubtitle>\n                </CCol>\n                {/*<CCol xs=\"auto\" className=\"ms-auto\">\n                  <CButton color=\"secondary\">\n                    <CIcon icon={cilUserPlus} className=\"me-2\" />\n                    {t('addNewUser')}\n                  </CButton>\n                </CCol> \n                  </CRow> \n              <CTable align=\"middle\" className=\"mb-0\" hover responsive>\n                <CTableHead className=\"fw-semibold text-body-secondary\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>{t('user')}</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">{t('country')}</CTableHeaderCell>\n                    <CTableHeaderCell>{t('usage')}</CTableHeaderCell>\n                    <CTableHeaderCell>{t('activity')}</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-body-secondary text-nowrap\">\n                          <span>{item.user.new ? t('new') : t('recurring')}</span> |{' '}\n                          {t('registered')}\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"d-flex justify-content-between align-items-baseline mb-1\">\n                          <div className=\"fw-semibold\">{item.usage.value}%</div>\n                          <div className=\"small text-body-secondary text-nowrap ms-3\">\n                            {item.usage.period}\n                          </div>\n                        </div>\n                        <CProgress\n                          thin\n                          color={`${item.usage.color}-gradient`}\n                          value={item.usage.value}\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-body-secondary\">{t('lastLogin')}</div>\n                        <div className=\"fw-semibold text-nowrap\">{item.activity}</div>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        {/* <CCol xl={3}>\n          <CRow>\n            <CCol md={4} xl={12}>\n              <CWidgetStatsA\n                className=\"mb-4\"\n                color=\"primary-gradient\"\n                value={\n                  <>\n                    26K{' '}\n                    <span className=\"fs-6 fw-normal\">\n                      (-12.4% <CIcon icon={cilArrowBottom} />)\n                    </span>\n                  </>\n                }\n                title={t('users')}\n                action={\n                  <CDropdown alignment=\"end\">\n                    <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                      <CIcon icon={cilOptions} className=\"text-white\" />\n                    </CDropdownToggle>\n                    <CDropdownMenu>\n                      <CDropdownItem>{t('action')}</CDropdownItem>\n                      <CDropdownItem>{t('anotherAction')}</CDropdownItem>\n                      <CDropdownItem>{t('somethingElseHere')}</CDropdownItem>\n                      <CDropdownItem disabled>{t('disabledAction')}</CDropdownItem>\n                    </CDropdownMenu>\n                  </CDropdown>\n                }\n                chart={\n                  <CChartLine\n                    className=\"mt-3 mx-3\"\n                    style={{ height: '85px' }}\n                    data={{\n                      labels: [\n                        t('january'),\n                        t('february'),\n                        t('march'),\n                        t('april'),\n                        t('may'),\n                        t('june'),\n                        t('july'),\n                      ],\n                      datasets: [\n                        {\n                          label: 'My First dataset',\n                          backgroundColor: 'transparent',\n                          borderColor: 'rgba(255,255,255,.55)',\n                          pointBackgroundColor: getStyle('--cui-primary'),\n                          data: [65, 59, 84, 84, 51, 55, 40],\n                        },\n                      ],\n                    }}\n                    options={{\n                      plugins: {\n                        legend: {\n                          display: false,\n                        },\n                      },\n                      maintainAspectRatio: false,\n                      scales: {\n                        x: {\n                          border: {\n                            display: false,\n                          },\n                          grid: {\n                            display: false,\n                          },\n                          ticks: {\n                            display: false,\n                          },\n                        },\n                        y: {\n                          min: 30,\n                          max: 89,\n                          display: false,\n                          grid: {\n                            display: false,\n                          },\n                          ticks: {\n                            display: false,\n                          },\n                        },\n                      },\n                      elements: {\n                        line: {\n                          borderWidth: 1,\n                          tension: 0.4,\n                        },\n                        point: {\n                          radius: 4,\n                          hitRadius: 10,\n                          hoverRadius: 4,\n                        },\n                      },\n                    }}\n                  />\n                }\n              />\n            </CCol>\n            <CCol md={4} xl={12}>\n              <CWidgetStatsA\n                className=\"mb-4\"\n                color=\"warning-gradient\"\n                value={\n                  <>\n                    2.49%{' '}\n                    <span className=\"fs-6 fw-normal\">\n                      (84.7% <CIcon icon={cilArrowTop} />)\n                    </span>\n                  </>\n                }\n                title={t('conversionRate')}\n                action={\n                  <CDropdown alignment=\"end\">\n                    <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                      <CIcon icon={cilOptions} className=\"text-white\" />\n                    </CDropdownToggle>\n                    <CDropdownMenu>\n                      <CDropdownItem>{t('action')}</CDropdownItem>\n                      <CDropdownItem>{t('anotherAction')}</CDropdownItem>\n                      <CDropdownItem>{t('somethingElseHere')}</CDropdownItem>\n                      <CDropdownItem disabled>{t('disabledAction')}</CDropdownItem>\n                    </CDropdownMenu>\n                  </CDropdown>\n                }\n                chart={\n                  <CChartLine\n                    className=\"mt-3\"\n                    style={{ height: '85px' }}\n                    data={{\n                      labels: [\n                        t('january'),\n                        t('february'),\n                        t('march'),\n                        t('april'),\n                        t('may'),\n                        t('june'),\n                        t('july'),\n                      ],\n                      datasets: [\n                        {\n                          label: 'My First dataset',\n                          backgroundColor: 'rgba(255,255,255,.2)',\n                          borderColor: 'rgba(255,255,255,.55)',\n                          data: [78, 81, 80, 45, 34, 12, 40],\n                          fill: true,\n                        },\n                      ],\n                    }}\n                    options={{\n                      plugins: {\n                        legend: {\n                          display: false,\n                        },\n                      },\n                      maintainAspectRatio: false,\n                      scales: {\n                        x: {\n                          display: false,\n                        },\n                        y: {\n                          display: false,\n                        },\n                      },\n                      elements: {\n                        line: {\n                          borderWidth: 2,\n                          tension: 0.4,\n                        },\n                        point: {\n                          radius: 0,\n                          hitRadius: 10,\n                          hoverRadius: 4,\n                        },\n                      },\n                    }}\n                  />\n                }\n              />\n            </CCol>\n            <CCol md={4} xl={12}>\n              <CWidgetStatsA\n                className=\"mb-4\"\n                color=\"danger-gradient\"\n                value={\n                  <>\n                    44K{' '}\n                    <span className=\"fs-6 fw-normal\">\n                      (-23.6% <CIcon icon={cilArrowBottom} />)\n                    </span>\n                  </>\n                }\n                title={t('sessions')}\n                action={\n                  <CDropdown alignment=\"end\">\n                    <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                      <CIcon icon={cilOptions} className=\"text-white\" />\n                    </CDropdownToggle>\n                    <CDropdownMenu>\n                      <CDropdownItem>{t('action')}</CDropdownItem>\n                      <CDropdownItem>{t('anotherAction')}</CDropdownItem>\n                      <CDropdownItem>{t('somethingElseHere')}</CDropdownItem>\n                      <CDropdownItem disabled>{t('disabledAction')}</CDropdownItem>\n                    </CDropdownMenu>\n                  </CDropdown>\n                }\n                chart={\n                  <CChartBar\n                    className=\"mt-3 mx-3\"\n                    style={{ height: '85px' }}\n                    data={{\n                      labels: [\n                        t('january'),\n                        t('february'),\n                        t('march'),\n                        t('april'),\n                        t('may'),\n                        t('june'),\n                        t('july'),\n                        t('august'),\n                        t('september'),\n                        t('october'),\n                        t('november'),\n                        t('december'),\n                        t('january'),\n                        t('february'),\n                        t('march'),\n                        t('april'),\n                      ],\n                      datasets: [\n                        {\n                          label: 'My First dataset',\n                          backgroundColor: 'rgba(255,255,255,.2)',\n                          borderColor: 'rgba(255,255,255,.55)',\n                          data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                          barPercentage: 0.6,\n                        },\n                      ],\n                    }}\n                    options={{\n                      maintainAspectRatio: false,\n                      plugins: {\n                        legend: {\n                          display: false,\n                        },\n                      },\n                      scales: {\n                        x: {\n                          grid: {\n                            display: false,\n                            drawTicks: false,\n                          },\n                          ticks: {\n                            display: false,\n                          },\n                        },\n                        y: {\n                          border: {\n                            display: false,\n                          },\n                          grid: {\n                            display: false,\n                            drawTicks: false,\n                          },\n                          ticks: {\n                            display: false,\n                          },\n                        },\n                      },\n                    }}\n                  />\n                }\n              />\n            </CCol>\n          </CRow>\n              </CCol> \n              </CRow> */} \n      {/*<CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardBody className=\"p-4\">\n              <CCardTitle className=\"fs-4 fw-semibold\">Traffic</CCardTitle>\n              <CCardSubtitle className=\"fw-normal text-body-secondary border-bottom mb-3 pb-4\">\n                Last Week\n              </CCardSubtitle>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol xs={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3 mb-3\">\n                        <div className=\"text-body-secondary text-truncate small\">\n                          {t('newClients')}\n                        </div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol xs={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-body-secondary text-truncate small\">\n                          {t('recurringClients')}\n                        </div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n                  <div className=\"border-top mb-4\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-body-secondary small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info-gradient\" value={item.value1} />\n                        <CProgress thin color=\"danger-gradient\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol xs={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-body-secondary text-truncate small\">\n                          {t('pageviews')}\n                        </div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol xs={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-body-secondary text-truncate small\">\n                          {t('organic')}\n                        </div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n                  <div className=\"border-top mb-4\" />\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning-gradient\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-body-secondary small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success-gradient\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n              <br />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow> */}\n    </>\n  )\n}\n\nexport default Dashboard\n","export var cibFacebook = [\"32 32\", \"<path d='M32 16c0-8.839-7.167-16-16-16-8.839 0-16 7.161-16 16 0 7.984 5.849 14.604 13.5 15.803v-11.177h-4.063v-4.625h4.063v-3.527c0-4.009 2.385-6.223 6.041-6.223 1.751 0 3.584 0.312 3.584 0.312v3.937h-2.021c-1.984 0-2.604 1.235-2.604 2.5v3h4.437l-0.713 4.625h-3.724v11.177c7.645-1.199 13.5-7.819 13.5-15.803z'/>\"];\n","export var cibLinkedin = [\"32 32\", \"<path d='M27.26 27.271h-4.733v-7.427c0-1.771-0.037-4.047-2.475-4.047-2.468 0-2.844 1.921-2.844 3.916v7.557h-4.739v-15.271h4.552v2.083h0.061c0.636-1.203 2.183-2.468 4.491-2.468 4.801 0 5.692 3.161 5.692 7.271v8.385zM7.115 9.912c-1.527 0-2.751-1.235-2.751-2.756 0-1.516 1.229-2.749 2.751-2.749s2.755 1.233 2.755 2.749c0 1.521-1.233 2.756-2.755 2.756zM9.489 27.271h-4.749v-15.271h4.749zM29.636 0h-27.276c-1.303 0-2.36 1.031-2.36 2.307v27.387c0 1.276 1.057 2.307 2.36 2.307h27.271c1.301 0 2.369-1.031 2.369-2.307v-27.387c0-1.276-1.068-2.307-2.369-2.307z'/>\"];\n","export var cibTwitter = [\"32 32\", \"<path d='M31.937 6.093c-1.177 0.516-2.437 0.871-3.765 1.032 1.355-0.813 2.391-2.099 2.885-3.631-1.271 0.74-2.677 1.276-4.172 1.579-1.192-1.276-2.896-2.079-4.787-2.079-3.625 0-6.563 2.937-6.563 6.557 0 0.521 0.063 1.021 0.172 1.495-5.453-0.255-10.287-2.875-13.52-6.833-0.568 0.964-0.891 2.084-0.891 3.303 0 2.281 1.161 4.281 2.916 5.457-1.073-0.031-2.083-0.328-2.968-0.817v0.079c0 3.181 2.26 5.833 5.26 6.437-0.547 0.145-1.131 0.229-1.724 0.229-0.421 0-0.823-0.041-1.224-0.115 0.844 2.604 3.26 4.5 6.14 4.557-2.239 1.755-5.077 2.801-8.135 2.801-0.521 0-1.041-0.025-1.563-0.088 2.917 1.86 6.36 2.948 10.079 2.948 12.067 0 18.661-9.995 18.661-18.651 0-0.276 0-0.557-0.021-0.839 1.287-0.917 2.401-2.079 3.281-3.396z'/>\"];\n","export var cilArrowBottom = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='367.997 338.75 271.999 434.747 271.999 17.503 239.999 17.503 239.999 434.745 144.003 338.75 121.376 361.377 256 496 390.624 361.377 367.997 338.75' class='ci-primary'/>\"];\n","export var cilArrowTop = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='390.624 150.625 256 16 121.376 150.625 144.004 173.252 240.001 77.254 240.001 495.236 272.001 495.236 272.001 77.257 367.996 173.252 390.624 150.625' class='ci-primary'/>\"];\n","export var cilCart = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='160 96.039 160 128.039 464 128.039 464 191.384 428.5 304.039 149.932 304.039 109.932 16 16 16 16 48 82.068 48 122.068 336.039 451.968 336.039 496 196.306 496 96.039 160 96.039' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M176.984,368.344a64.073,64.073,0,0,0-64,64h0a64,64,0,0,0,128,0h0A64.072,64.072,0,0,0,176.984,368.344Zm0,96a32,32,0,1,1,32-32A32.038,32.038,0,0,1,176.984,464.344Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400.984,368.344a64.073,64.073,0,0,0-64,64h0a64,64,0,0,0,128,0h0A64.072,64.072,0,0,0,400.984,368.344Zm0,96a32,32,0,1,1,32-32A32.038,32.038,0,0,1,400.984,464.344Z' class='ci-primary'/>\"];\n","export var cilPeople = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M462.541,316.3l-64.344-42.1,24.774-45.418A79.124,79.124,0,0,0,432.093,192V120A103.941,103.941,0,0,0,257.484,43.523L279.232,67a71.989,71.989,0,0,1,120.861,53v72a46.809,46.809,0,0,1-5.215,21.452L355.962,284.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421V432h-72v32h104V378.494A74.061,74.061,0,0,0,462.541,316.3Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M318.541,348.3l-64.343-42.1,24.773-45.418A79.124,79.124,0,0,0,288.093,224V152A104.212,104.212,0,0,0,184.04,47.866C126.723,47.866,80.093,94.581,80.093,152v72a78,78,0,0,0,9.015,36.775l24.908,45.664L50.047,348.3A74.022,74.022,0,0,0,16.5,410.4L16,496H352.093V410.494A74.061,74.061,0,0,0,318.541,348.3ZM320.093,464H48.186l.31-53.506a42.158,42.158,0,0,1,19.073-35.421l88.682-58.029L117.2,245.452A46.838,46.838,0,0,1,112.093,224V152a72,72,0,1,1,144,0v72a46.809,46.809,0,0,1-5.215,21.452L211.962,316.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421Z' class='ci-primary'/>\"];\n","export var cilUserFemale = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M403.6,343.656l-72.823-47.334L344.043,272h23.428a48,48,0,0,0,44.119-66.908L361.581,90.57a112.029,112.029,0,0,0-211.162,0L100.41,205.092A48,48,0,0,0,144.529,272h23.428l13.266,24.322L108.4,343.656A79.725,79.725,0,0,0,72,410.732V496H440V410.732A79.727,79.727,0,0,0,403.6,343.656ZM408,464H104V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479L186.953,240H144.529a16,16,0,0,1-14.72-22.27l50.172-114.9.448-1.143a80.029,80.029,0,0,1,151.142,0l.2.58L382.191,217.73A16,16,0,0,1,367.471,240H325.047L288.5,307.007l97.661,63.479h0A47.836,47.836,0,0,1,408,410.732Z' class='ci-primary'/>\"];\n","import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CCardTitleProps extends HTMLAttributes<HTMLHeadingElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CCardTitle: PolymorphicRefForwardingComponent<'h5', CCardTitleProps> = forwardRef<\n  HTMLHeadingElement,\n  CCardTitleProps\n>(({ children, as: Component = 'h5', className, ...rest }, ref) => {\n  return (\n    <Component className={classNames('card-title', className)} {...rest} ref={ref}>\n      {children}\n    </Component>\n  )\n})\n\nCCardTitle.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardTitle.displayName = 'CCardTitle'\n","/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (__COREUI_VERSION__): getStyle.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst getStyle = (property: string, element?: Element) => {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  if (typeof document === 'undefined') {\n    return\n  }\n\n  const _element = element ?? document.body\n\n  return window.getComputedStyle(_element, null).getPropertyValue(property).replace(/^\\s/, '')\n}\n\nexport default getStyle\n"],"names":["Dashboard","navigate","useNavigate","t","useTranslation","chartBartRef","useRef","chartLineRef","useEffect","localStorage","getItem","document","documentElement","addEventListener","current","setTimeout","options","scales","x","grid","color","getStyle","ticks","y","update","data","datasets","pointBackgroundColor","cilUser","cilUserFemale","cibFacebook","cibTwitter","cibLinkedin","tableExampleUsagePeriod","dateStart","dateEnd","formatParams","date","year","month","day","concat","Date","cifUs","val","range","cifBr","cifIn","cifFr","cifEs","cifPl","_jsx","_Fragment","children","CRow","CCol","xl","_jsxs","sm","CCard","className","CCardBody","CCardTitle","as","CIcon","icon","cilPeople","size","cilArrowBottom","cilCart","cilArrowTop","forwardRef","_a","ref","_b","Component","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName","property","element","window","_element","body","getComputedStyle","getPropertyValue","replace"],"sourceRoot":""}