{"version":3,"file":"static/js/1519.fc57dbac.chunk.js","mappings":"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","sources":["views/pages/client/EditClient.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CImage,\n  CFormSelect,\n  CFormCheck,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CAlert,\n  CCardHeader,\n  CDatePicker,\n  CFormLabel,\n  CMultiSelect\n} from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify'\nimport './EditClient.css'; // Import custom CSS for styling\nimport Select from 'react-select'; // Import react-select\n\nconst EditClient = () => {\n  const clientId = useLocation().state?.clientId;\n  const navigate = useNavigate();\n\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  const [companyName, setCompanyName] = useState(\"\")\n  const [clientType, setClientType] = useState(\"\")\n  const [logo, setLogo] = useState()\n  const [logoPath, setLogoPath] = useState()\n  const [contactId, setContactId] = useState(\"\")\n  const [imageDisplayOrder, setImageDisplayOrder] = useState(\"\")\n  const [validationErrors, setValidationErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [users, setUsers] = useState([])\n  const [brands, setBrands] = useState([])\n  const [selectedBrands, setSelectedBrands] = useState([]); \n   \n    useEffect(() => {\n      axios.get('user/findAll', {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }}).then(response => setUsers(response.data.data))\n    .catch(error => console.error('error fetching users', error));\n\n    axios.get('brand/findAll', {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }}).then(response => {\n      let dataFromDatabase = response.data.data;\n      const formattedOptions = dataFromDatabase.map(item => ({\n        value: item.id,\n        label: item.name\n      }));\n      setBrands(formattedOptions);  \n    })\n    .catch(error => console.error('error fetching brand', error));\n\n      axios.get('client/'+clientId, {headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }})\n          .then((response) => {\n            if(response.data){\n              let clientDetail = response.data.data;\n              setCompanyName(clientDetail.companyName);\n              setClientType(clientDetail.clientType);\n              setContactId(clientDetail.contactId);\n              setSelectedBrands(clientDetail.brands.map(br => ({ value: br.id, label: br.name }))); \n              setLogoPath(process.env.REACT_APP_API_URL+clientDetail.logo);\n              let displayOrder = clientDetail.imageDisplayOrder;\n              setImageDisplayOrder(displayOrder);\n              if(displayOrder == 'unspecified'){\n                document.getElementById('unspecified').checked = true;\n                document.getElementById('imageDisplay1').disabled = true;\n                document.getElementById('imageDisplay2').disabled = true;\n                document.getElementById('imageDisplay3').disabled = true;\n                document.getElementById('imageDisplay4').disabled = true;\n              }else{\n                displayOrder = displayOrder.split(',')\n                document.getElementById('imageDisplay1').value = displayOrder[0];\n                document.getElementById('imageDisplay2').value = displayOrder[1];\n                document.getElementById('imageDisplay3').value = displayOrder[2];\n                document.getElementById('imageDisplay4').value = displayOrder[3];\n              }\n            }\n          })\n  }, [])\n \n  const changeOrder = (e) => {\n    if(document.getElementById('unspecified').checked){\n      document.getElementById('imageDisplay1').disabled = true;\n      document.getElementById('imageDisplay2').disabled = true;\n      document.getElementById('imageDisplay3').disabled = true;\n      document.getElementById('imageDisplay4').disabled = true;\n      setImageDisplayOrder('unspecified')\n    }else{\n      document.getElementById('imageDisplay1').disabled = false;\n      document.getElementById('imageDisplay2').disabled = false;\n      document.getElementById('imageDisplay3').disabled = false;\n      document.getElementById('imageDisplay4').disabled = false;\n      let value1 = document.getElementById('imageDisplay1').value;\n      let value2 = document.getElementById('imageDisplay2').value;\n      let value3 = document.getElementById('imageDisplay3').value;\n      let value4 = document.getElementById('imageDisplay4').value;\n      setImageDisplayOrder(value1+','+value2+','+value3+','+value4);\n    }\n  }\n\n  const handleCheckboxChange = (event, brandId) => {\n    if (event.target.checked) {\n      setSelectedBrands([...selectedBrands, brandId]); // Add brandId to selectedBrands array\n    } else {\n      setSelectedBrands(selectedBrands.filter(id => id !== brandId)); // Remove brandId from selectedBrands array\n    }\n  };\n\n\n  const convertFileToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n\n    const editClientAction = async (e) => {\n      \n        e.preventDefault();\n        setIsSubmitting(true)\n        let image = '';\n        if(logo){\n           image = await convertFileToBase64(logo);\n        }\n        console.log(image);\n        let payload = {\n          companyName: companyName,\n          contactId: contactId,\n          clientType: clientType,\n          imageDisplayOrder: imageDisplayOrder,\n          brandIds: selectedBrands.map(brand => brand.value),\n          logo: image\n        }\n\n        axios.patch('/client/update/'+clientId, payload, {headers: { Authorization: `Bearer ${localStorage.getItem('token')}`, \"Contetnt-Type\":\"multipart/form-data\" }} )\n        .then((r) => {\n          toast.success(r.data.message);\n            setIsSubmitting(false)\n\n        })\n        .catch((e) => {\n            setIsSubmitting(false)\n            if (e.response.data.errors != undefined) {\n                setValidationErrors(e.response.data.errors);\n            }\n        });\n    }\n  return (\n    <div className=\"bg-body-tertiary min-vh-75 d-flex flex-row align-items-center\">\n      <CContainer>\n      <CForm className=\"row g-3\" onSubmit={(e)=>editClientAction(e)}>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={12}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>Client Information</CCardHeader>\n              <CCardBody className=\"p-4\">\n              <CRow className=\"mb-3\">\n                  <CFormLabel htmlFor=\"companyName\" className=\"col-sm-3 col-form-label\">Company Name</CFormLabel>\n                  <div className=\"col-sm-8\">\n                    <CFormInput type=\"text\" id=\"companyName\" onChange={(e)=>{setCompanyName(e.target.value)}} value={companyName} name='companyName' />\n                  </div>\n              </CRow>\n\n                <CRow className='mb-4'>\n                  <CFormLabel htmlFor=\"clientType\" className=\"col-sm-3 col-form-label\">Company Type</CFormLabel>\n                  <div className=\"col-sm-8\">\n                    <CFormSelect id=\"clientType\" name='clientType' onChange={(e)=>{setClientType(e.target.value)}} value={clientType} >\n                      <option>Choose...</option>\n                      <option value='broker' >Broker</option>\n                      <option value='distributer' >Distributer</option>\n                      <option value='Manufacturer' >Manufacturer</option>\n                    </CFormSelect>\n                  </div>\n                </CRow>\n\n                <CRow className=\"mb-3\">\n                  <CFormLabel htmlFor=\"Logo\" className=\"col-sm-3 col-form-label\">Logo</CFormLabel>\n                  <div className=\"col-sm-8\">\n                  <CFormInput type=\"file\" id=\"logo\" onChange={(e)=>{setLogo(e.target.files[0])}} name='logo' />\n                  <CImage rounded thumbnail src={logoPath} width={200} height={200} />\n                  </div>\n              </CRow>\n\n              <CRow className=\"mb-3\">\n                  <CFormLabel htmlFor=\"Brands\" className=\"col-sm-3 col-form-label\">Brands</CFormLabel>\n                  <div className='col-sm-8'>\n                  <Select\n                    options={brands}\n                    isMulti\n                    value={selectedBrands}\n                    onChange={(selectedOptions) => setSelectedBrands(selectedOptions)}\n                    placeholder=\"Select brands...\"\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    closeMenuOnSelect={false}\n                    styles={{\n                      control: (provided) => ({\n                        ...provided,\n                        borderRadius: 0,\n                        borderColor: '#ced4da',\n                      }),\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 9999,\n                      }),\n                    }}\n                  />\n                </div>\n\n              </CRow>\n\n                <CRow className='mb-4'>\n                <CFormLabel htmlFor=\"imageDisplayOrder\" className=\"col-sm-3 col-form-label\">Image Display Order</CFormLabel>\n                <div className=\"col-sm-9\">\n                <CFormCheck id=\"unspecified\" label=\"Unspecified\" className='col-sm-2' onChange={(e)=>{changeOrder(e.target.value)}}/>\n                <div className='col-sm-2 float-start ml-5'>\n                <CFormSelect id=\"imageDisplay1\" className='col-sm-2 float-start' onChange={(e)=>{changeOrder(e.target.value)}} >\n                  <option value='c'>Closed Case</option>\n                  <option value='o' >Open Case</option>\n                  <option value='e' >Inner Package</option>\n                  <option value='i' >Raw</option>\n                </CFormSelect></div>\n                <div className='col-sm-2 float-start ml-5'>\n                <CFormSelect id=\"imageDisplay2\" className='col-sm-2' onChange={(e)=>{changeOrder(e.target.value)}} >\n                  <option value='c'>Closed Case</option>\n                  <option value='o' >Open Case</option>\n                  <option value='e' >Inner Package</option>\n                  <option value='i' >Raw</option>\n                </CFormSelect></div>\n                <div className='col-sm-2 float-start ml-5'>\n                <CFormSelect id=\"imageDisplay3\" className='col-sm-2' onChange={(e)=>{changeOrder(e.target.value)}} >\n                  <option value='c'>Closed Case</option>\n                  <option value='o' >Open Case</option>\n                  <option value='e' >Inner Package</option>\n                  <option value='i' >Raw</option>\n                </CFormSelect></div>\n                <div className='col-sm-2 float-start ml-5'>\n                <CFormSelect id=\"imageDisplay4\" className='col-sm-2' onChange={(e)=>{changeOrder(e.target.value)}} >\n                  <option value='c'>Closed Case</option>\n                  <option value='o' >Open Case</option>\n                  <option value='e' >Inner Package</option>\n                  <option value='i' >Raw</option>\n                </CFormSelect></div>\n                </div>\n                </CRow>\n\n                <CRow className='mb-4'>\n                  <CFormLabel htmlFor=\"contactPerson\" className=\"col-sm-3 col-form-label\">Contact Person</CFormLabel>\n                  <div className=\"col-sm-8\">\n                    <CFormSelect id=\"contactId\" name='contactId' onChange={(e)=>{setContactId(e.target.value)}} value={contactId} >\n                    {users.map((e, key) => {\n                        return <option key={key} value={e.id}>{e.username}</option>;\n                    })}\n\n                    </CFormSelect>\n                  </div>\n                </CRow>\n                </CCardBody>\n                </CCard>\n                </CCol>\n                </CRow>\n              <CRow className='p-4'>\n              <CCol xs={12}>\n                  <CButton color=\"primary\" type=\"submit\" disabled={isSubmitting} className='float-end'>Update Company</CButton>\n                </CCol>\n              </CRow>\n              </CForm>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default EditClient\n"],"names":["EditClient","_useLocation$state","clientId","useLocation","state","error","setError","useNavigate","useState","success","setSuccess","companyName","setCompanyName","clientType","setClientType","logo","setLogo","logoPath","setLogoPath","contactId","setContactId","imageDisplayOrder","setImageDisplayOrder","validationErrors","setValidationErrors","isSubmitting","setIsSubmitting","users","setUsers","brands","setBrands","selectedBrands","setSelectedBrands","useEffect","axios","get","headers","Authorization","concat","localStorage","getItem","then","response","data","catch","console","formattedOptions","map","item","value","id","label","name","clientDetail","br","process","displayOrder","document","getElementById","checked","disabled","split","changeOrder","e","value1","value2","value3","value4","editClientAction","async","preventDefault","image","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","log","payload","brandIds","brand","patch","r","toast","message","undefined","errors","_jsx","className","children","CContainer","_jsxs","CForm","onSubmit","CRow","CCol","md","lg","xl","CCard","CCardHeader","CCardBody","CFormLabel","htmlFor","CFormInput","type","onChange","target","CFormSelect","files","CImage","rounded","thumbnail","src","width","height","Select","options","isMulti","selectedOptions","placeholder","classNamePrefix","isClearable","closeMenuOnSelect","styles","control","provided","borderRadius","borderColor","menu","zIndex","CFormCheck","key","username","xs","CButton","color"],"sourceRoot":""}